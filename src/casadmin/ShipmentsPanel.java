package casadmin;

import java.awt.Dimension;
import java.awt.Point;
import java.util.*;

public class ShipmentsPanel extends javax.swing.JPanel {

    /** Creates new form ShipmentsPanel */
    
    String currentIdCas = "";
    public ShipmentsPanel() {
        initComponents();
        // iStartRecord - numer rekordu od którego zaczyna się przeglądanie listy
        // użytkowników. Jest dla tego, że istnieje możliwość przeglądania danych
        // częściami (po 50, 100 czy inną ilość na stronie).
        iStartRecord = 0;
        Date d = new Date();
        dcOdDatyNadania.setDate(d);
        dcDoDatyNadania.setDate(d);
        lblReturns.setVisible(false);
        comboReturns.setVisible(false);

        fillComboOpiekun();
    }

    public ShipmentsPanel(Date p_odDaty, Date p_doDaty, String p_idCas, String p_terminal) {
        initComponents();
        // iStartRecord - numer rekordu od którego zaczyna się przeglądanie listy
        // użytkowników. Jest dla tego, że istnieje możliwość przeglądania danych
        // częściami (po 50, 100 czy inną ilość na stronie).
        iStartRecord = 0;
        // Rozmiary panelu
        this.setPreferredSize(new java.awt.Dimension(1017, 659));
        // Ustawiamy kryrerii filtrowania
        dcOdDatyNadania.setDate(p_odDaty);
        dcOdDatyNadania.repaint();
        dcDoDatyNadania.setDate(p_doDaty);
        dcDoDatyNadania.repaint();
        lblReturns.setVisible(false);
        comboReturns.setVisible(false);
        tfIdCas.setText(p_idCas);
        currentIdCas = p_idCas;
        tfTerminal.setText(p_terminal);
        tfIdCas.repaint();
        tfTerminal.repaint();
        fillComboOpiekun();
        // pokazujemy listę przesyłek zgodnie z kryteriami
        prepareAndShowMainQuery();
    }

    public ShipmentsPanel(String p_CustId, String p_ShipmentId) {
        initComponents();
        // iStartRecord - numer rekordu od którego zaczyna się przeglądanie listy
        // użytkowników. Jest dla tego, że istnieje możliwość przeglądania danych
        // częściami (po 50, 100 czy inną ilość na stronie).
        iStartRecord = 0;
        currentIdCas = p_CustId;
        // W tym przypadku pokazujemy tylko jedną przesyłkę, tak że górna panel
        // powinna być niedostępna
        YPFunctions.enableContainer(upPanel, false);
//        upPanel.setEnabled(false);
        lblReturns.setVisible(false);
        comboReturns.setVisible(false);
        fillComboOpiekun();
        //Pokazujemy zawartość przesyłki
        ShowShipment(p_CustId, p_ShipmentId);
    }


            // Wypełniamy ComboBox nazwami opiekunów.
        // Opiekun - osoba ze specjalnego działu DHL, który zajmuje się
        // spółpracą z klientami CAS
    private void fillComboOpiekun() {
        if (GlobalData.v_allUsers.isEmpty())
                 GlobalData.v_allUsers =
                        GlobalData.oraSession.selectOneColumnToVector(
                        "Select user_name from cas_users where active='T' order by user_name",
                        null);

        comboOpiekun.removeAllItems();
        comboOpiekun.addItem("*.*");
        Iterator it = GlobalData.v_allUsers.iterator();
        while (it.hasNext())
               comboOpiekun.addItem((String) it.next());
        comboOpiekun.setSelectedItem("*.*");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        upPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dcOdDatyNadania = new com.toedter.calendar.JDateChooser();
        jLabel66 = new javax.swing.JLabel();
        tfIdCas = new javax.swing.JTextField();
        jbShowCustomers = new javax.swing.JButton();
        jLabel67 = new javax.swing.JLabel();
        tfTerminal = new javax.swing.JTextField();
        jbShow = new javax.swing.JButton();
        cbMode = new javax.swing.JComboBox();
        jbPrevRecords = new javax.swing.JButton();
        jbNextRecords = new javax.swing.JButton();
        cbRecCount = new javax.swing.JComboBox();
        jLabel71 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        dcDoDatyNadania = new com.toedter.calendar.JDateChooser();
        jLabel74 = new javax.swing.JLabel();
        comboOpiekun = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jbSeek = new javax.swing.JButton();
        tfShipmentSeek = new javax.swing.JTextField();
        downPanel = new javax.swing.JScrollPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        downUpPanel = new javax.swing.JPanel();
        panelAllShipments = new javax.swing.JScrollPane();
        tableShips = new javax.swing.JTable();
        downDownPanel = new javax.swing.JPanel();
        ShipmentSplitPane = new javax.swing.JSplitPane();
        downDownLeftPanel = new javax.swing.JPanel();
        odbiorcaPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        NazwaSkrocOdb = new javax.swing.JTextField();
        NazwaOdb = new javax.swing.JTextField();
        KodPocztOdb = new javax.swing.JTextField();
        UlicaOdb = new javax.swing.JTextField();
        TelOdb = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        DomOdb = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        MiastoOdb = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        OsKont = new javax.swing.JTextField();
        btnParcelShop = new javax.swing.JButton();
        jLabel78 = new javax.swing.JLabel();
        KrajOdb = new javax.swing.JTextField();
        nadawcaPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        UlicaNad = new javax.swing.JTextField();
        KodPocztNad = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        MiastoNad = new javax.swing.JTextField();
        DomNad = new javax.swing.JTextField();
        SapNad = new javax.swing.JTextField();
        NazwaNad = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        TelNad = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        KrajNad = new javax.swing.JTextField();
        PozDanePanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        ZawartPozDane = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        MpkPozDane = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        NazwaDokPozDane = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        refPobraniaPozDane = new javax.swing.JTextField();
        UwagiPozDane = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        codAccount = new javax.swing.JTextField();
        kwotyPanel = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        tfOplPEX = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        tfOplPDR = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        tfOplCOD = new javax.swing.JTextField();
        tfOplUBE = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        tfOplROD = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        tfOplPOD = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        tfOplNstEx = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        tfOplNstDr = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        tfOplTerm = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        tfOplNetto = new javax.swing.JTextField();
        jLabel65 = new javax.swing.JLabel();
        tfOplBrutto = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        labelPDI = new javax.swing.JLabel();
        tfOplPDI = new javax.swing.JTextField();
        labelVIP = new javax.swing.JLabel();
        tfOplVIP = new javax.swing.JTextField();
        PreaNotPanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        PreawEmail = new javax.swing.JTextField();
        PreawSms = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        NotyfEmail = new javax.swing.JTextField();
        NotyfSms = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRefNad = new javax.swing.JTable();
        jbPdf = new javax.swing.JButton();
        PdfText = new javax.swing.JTextField();
        uslugiPanel = new javax.swing.JPanel();
        cbOdbiorWlasny = new javax.swing.JCheckBox();
        cb1722 = new javax.swing.JCheckBox();
        cbDostSob = new javax.swing.JCheckBox();
        cbOdbSob = new javax.swing.JCheckBox();
        cbPotwDor = new javax.swing.JCheckBox();
        cbZwrDok = new javax.swing.JCheckBox();
        cbPDI = new javax.swing.JCheckBox();
        cbVIP = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableParcels = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableTnTROD = new javax.swing.JTable();
        innePanel = new javax.swing.JPanel();
        cbBLP = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        tfKurier = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        tfTerminalNadawcy = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        tfShipmentId = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        tfDataNadania = new javax.swing.JTextField();
        tfInsertt = new javax.swing.JTextField();
        tfTerminalOdbiorcy = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        tfSource = new javax.swing.JTextField();
        lblReturns = new javax.swing.JLabel();
        comboReturns = new javax.swing.JComboBox();
        jLabel80 = new javax.swing.JLabel();
        tfBC = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        tfDelivDays = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        cbRefNad = new javax.swing.JCheckBox();
        cbParcelShop = new javax.swing.JCheckBox();
        cbNeighbour = new javax.swing.JCheckBox();
        cbPackStation = new javax.swing.JCheckBox();
        jbElements = new javax.swing.JButton();
        downDownRightPanel = new javax.swing.JPanel();
        daneLpPanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        LpProdukt = new javax.swing.JTextField();
        LpPlatnik = new javax.swing.JTextField();
        LpPk = new javax.swing.JTextField();
        Lp5kg = new javax.swing.JTextField();
        Lp10kg = new javax.swing.JTextField();
        Lp20kg = new javax.swing.JTextField();
        Lp31kg = new javax.swing.JTextField();
        LpNiestandEx = new javax.swing.JTextField();
        LpDrBezPalet = new javax.swing.JTextField();
        LpWagaFiz = new javax.swing.JTextField();
        LpWagaPrz = new javax.swing.JTextField();
        LpOdleglosc = new javax.swing.JTextField();
        LpPal400 = new javax.swing.JTextField();
        LpPal600 = new javax.swing.JTextField();
        LpPal800 = new javax.swing.JTextField();
        LpPal1000 = new javax.swing.JTextField();
        LpNiestandDr = new javax.swing.JTextField();
        LpZwrPalet = new javax.swing.JTextField();
        LpPobranie = new javax.swing.JTextField();
        LpUbezp = new javax.swing.JTextField();
        LpPal200 = new javax.swing.JTextField();
        LpSztukDr = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        setLayout(new java.awt.GridLayout(1, 0));

        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(casadmin.CasAdminApp.class).getContext().getResourceMap(ShipmentsPanel.class);
        upPanel.setBackground(resourceMap.getColor("upPanel.background")); // NOI18N
        upPanel.setName("upPanel"); // NOI18N
        upPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 20));

        dcOdDatyNadania.setDateFormatString(resourceMap.getString("dcOdDatyNadania.dateFormatString")); // NOI18N
        dcOdDatyNadania.setName("dcOdDatyNadania"); // NOI18N
        jPanel2.add(dcOdDatyNadania, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 110, 20));

        jLabel66.setText(resourceMap.getString("jLabel66.text")); // NOI18N
        jLabel66.setName("jLabel66"); // NOI18N
        jPanel2.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, -1, -1));

        tfIdCas.setName("tfIdCas"); // NOI18N
        tfIdCas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfIdCasKeyReleased(evt);
            }
        });
        jPanel2.add(tfIdCas, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 60, 20));

        jbShowCustomers.setText(resourceMap.getString("jbShowCustomers.text")); // NOI18N
        jbShowCustomers.setName("jbShowCustomers"); // NOI18N
        jbShowCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbShowCustomersActionPerformed(evt);
            }
        });
        jPanel2.add(jbShowCustomers, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 40, -1));

        jLabel67.setText(resourceMap.getString("jLabel67.text")); // NOI18N
        jLabel67.setName("jLabel67"); // NOI18N
        jPanel2.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, 20));

        tfTerminal.setName("tfTerminal"); // NOI18N
        tfTerminal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfTerminalMouseClicked(evt);
            }
        });
        jPanel2.add(tfTerminal, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 60, -1));

        jbShow.setText(resourceMap.getString("jbShow.text")); // NOI18N
        jbShow.setName("jbShow"); // NOI18N
        jbShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbShowActionPerformed(evt);
            }
        });
        jPanel2.add(jbShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 50, 80, -1));

        cbMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Wszystkie", "BLP", "Bez BLP" }));
        cbMode.setName("cbMode"); // NOI18N
        jPanel2.add(cbMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 20, 80, -1));

        jbPrevRecords.setText(resourceMap.getString("jbPrevRecords.text")); // NOI18N
        jbPrevRecords.setName("jbPrevRecords"); // NOI18N
        jbPrevRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPrevRecordsActionPerformed(evt);
            }
        });
        jPanel2.add(jbPrevRecords, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 40, -1));

        jbNextRecords.setText(resourceMap.getString("jbNextRecords.text")); // NOI18N
        jbNextRecords.setName("jbNextRecords"); // NOI18N
        jbNextRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNextRecordsActionPerformed(evt);
            }
        });
        jPanel2.add(jbNextRecords, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 50, 40, -1));

        cbRecCount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "50", "100", "250", "500", "ALL" }));
        cbRecCount.setName("cbRecCount"); // NOI18N
        jPanel2.add(cbRecCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 50, -1));

        jLabel71.setText(resourceMap.getString("jLabel71.text")); // NOI18N
        jLabel71.setName("jLabel71"); // NOI18N
        jPanel2.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 50, 20));

        jLabel73.setText(resourceMap.getString("jLabel73.text")); // NOI18N
        jLabel73.setName("jLabel73"); // NOI18N
        jPanel2.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 30));

        dcDoDatyNadania.setDateFormatString(resourceMap.getString("dcDoDatyNadania.dateFormatString")); // NOI18N
        dcDoDatyNadania.setName("dcDoDatyNadania"); // NOI18N
        jPanel2.add(dcDoDatyNadania, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 110, 20));

        jLabel74.setText(resourceMap.getString("jLabel74.text")); // NOI18N
        jLabel74.setName("jLabel74"); // NOI18N
        jPanel2.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, -1, -1));

        comboOpiekun.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboOpiekun.setName("comboOpiekun"); // NOI18N
        jPanel2.add(comboOpiekun, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 150, -1));

        upPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 700, 80));

        jPanel3.setBackground(resourceMap.getColor("jPanel3.background")); // NOI18N
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel3.border.title"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel68.setLabelFor(tfShipmentSeek);
        jLabel68.setText(resourceMap.getString("jLabel68.text")); // NOI18N
        jLabel68.setName("jLabel68"); // NOI18N
        jPanel3.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 110, 20));

        jbSeek.setText(resourceMap.getString("jbSeek.text")); // NOI18N
        jbSeek.setName("jbSeek"); // NOI18N
        jbSeek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSeekActionPerformed(evt);
            }
        });
        jPanel3.add(jbSeek, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 70, -1));

        tfShipmentSeek.setFont(resourceMap.getFont("tfShipmentSeek.font")); // NOI18N
        tfShipmentSeek.setText(resourceMap.getString("tfShipmentSeek.text")); // NOI18N
        tfShipmentSeek.setName("tfShipmentSeek"); // NOI18N
        jPanel3.add(tfShipmentSeek, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 170, 20));

        upPanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 280, 80));

        jSplitPane1.setTopComponent(upPanel);

        downPanel.setBackground(resourceMap.getColor("downPanel.background")); // NOI18N
        downPanel.setAutoscrolls(true);
        downPanel.setName("downPanel"); // NOI18N
        downPanel.setPreferredSize(new java.awt.Dimension(300, 200));
        downPanel.setRequestFocusEnabled(false);

        jSplitPane2.setDividerLocation(100);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setName("jSplitPane2"); // NOI18N

        downUpPanel.setBackground(resourceMap.getColor("downUpPanel.background")); // NOI18N
        downUpPanel.setAutoscrolls(true);
        downUpPanel.setName("downUpPanel"); // NOI18N
        downUpPanel.setLayout(new java.awt.GridLayout(1, 0));

        panelAllShipments.setName("panelAllShipments"); // NOI18N

        tableShips.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableShips.setGridColor(resourceMap.getColor("tableShips.gridColor")); // NOI18N
        tableShips.setName("tableShips"); // NOI18N
        tableShips.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableShipsMouseClicked(evt);
            }
        });
        tableShips.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableShipsKeyReleased(evt);
            }
        });
        panelAllShipments.setViewportView(tableShips);

        downUpPanel.add(panelAllShipments);

        jSplitPane2.setTopComponent(downUpPanel);

        downDownPanel.setBackground(resourceMap.getColor("downDownPanel.background")); // NOI18N
        downDownPanel.setName("downDownPanel"); // NOI18N
        downDownPanel.setLayout(new java.awt.GridLayout(1, 0));

        ShipmentSplitPane.setDividerLocation(790);
        ShipmentSplitPane.setName("ShipmentSplitPane"); // NOI18N

        downDownLeftPanel.setBackground(resourceMap.getColor("downDownLeftPanel.background")); // NOI18N
        downDownLeftPanel.setAutoscrolls(true);
        downDownLeftPanel.setMinimumSize(new java.awt.Dimension(80, 80));
        downDownLeftPanel.setName("downDownLeftPanel"); // NOI18N
        downDownLeftPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        odbiorcaPanel.setBackground(resourceMap.getColor("odbiorcaPanel.background")); // NOI18N
        odbiorcaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Odbiorca"));
        odbiorcaPanel.setName("odbiorcaPanel"); // NOI18N
        odbiorcaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        odbiorcaPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 10));

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        odbiorcaPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, 20));

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        odbiorcaPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 10));

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        odbiorcaPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 10));

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        odbiorcaPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, -1, 20));
        jLabel6.getAccessibleContext().setAccessibleName(resourceMap.getString("jLabel6.AccessibleContext.accessibleName")); // NOI18N

        NazwaSkrocOdb.setText(resourceMap.getString("NazwaSkrocOdb.text")); // NOI18N
        NazwaSkrocOdb.setName("NazwaSkrocOdb"); // NOI18N
        odbiorcaPanel.add(NazwaSkrocOdb, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 90, -1));

        NazwaOdb.setText(resourceMap.getString("NazwaOdb.text")); // NOI18N
        NazwaOdb.setName("NazwaOdb"); // NOI18N
        odbiorcaPanel.add(NazwaOdb, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 240, -1));

        KodPocztOdb.setName("KodPocztOdb"); // NOI18N
        odbiorcaPanel.add(KodPocztOdb, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 90, -1));

        UlicaOdb.setName("UlicaOdb"); // NOI18N
        odbiorcaPanel.add(UlicaOdb, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 140, -1));

        TelOdb.setName("TelOdb"); // NOI18N
        odbiorcaPanel.add(TelOdb, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 90, -1));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        odbiorcaPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 50, 20));

        DomOdb.setName("DomOdb"); // NOI18N
        odbiorcaPanel.add(DomOdb, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 50, -1));

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        odbiorcaPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, 20));

        MiastoOdb.setName("MiastoOdb"); // NOI18N
        odbiorcaPanel.add(MiastoOdb, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 240, -1));

        jLabel59.setText(resourceMap.getString("jLabel59.text")); // NOI18N
        jLabel59.setName("jLabel59"); // NOI18N
        odbiorcaPanel.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 74, -1, 20));

        OsKont.setName("OsKont"); // NOI18N
        odbiorcaPanel.add(OsKont, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 130, -1));

        btnParcelShop.setText(resourceMap.getString("btnParcelShop.text")); // NOI18N
        btnParcelShop.setName("btnParcelShop"); // NOI18N
        btnParcelShop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParcelShopActionPerformed(evt);
            }
        });
        odbiorcaPanel.add(btnParcelShop, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 90, -1));
        btnParcelShop.getAccessibleContext().setAccessibleName(resourceMap.getString("btnParcelShop.AccessibleContext.accessibleName")); // NOI18N

        jLabel78.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel78.setText(resourceMap.getString("jLabel78.text")); // NOI18N
        jLabel78.setName("jLabel78"); // NOI18N
        odbiorcaPanel.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 50, 20));

        KrajOdb.setName("KrajOdb"); // NOI18N
        odbiorcaPanel.add(KrajOdb, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 50, -1));

        downDownLeftPanel.add(odbiorcaPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 460, 100));

        nadawcaPanel.setBackground(resourceMap.getColor("nadawcaPanel.background")); // NOI18N
        nadawcaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Nadawca"));
        nadawcaPanel.setName("nadawcaPanel"); // NOI18N
        nadawcaPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        nadawcaPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 10));

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        nadawcaPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, 20));

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        nadawcaPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 34, -1, 20));

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N
        nadawcaPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));

        UlicaNad.setName("UlicaNad"); // NOI18N
        nadawcaPanel.add(UlicaNad, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 140, -1));

        KodPocztNad.setName("KodPocztNad"); // NOI18N
        nadawcaPanel.add(KodPocztNad, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 90, -1));

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N
        nadawcaPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, 20));

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N
        nadawcaPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 50, 20));

        MiastoNad.setName("MiastoNad"); // NOI18N
        nadawcaPanel.add(MiastoNad, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 140, -1));

        DomNad.setName("DomNad"); // NOI18N
        nadawcaPanel.add(DomNad, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 50, -1));

        SapNad.setName("SapNad"); // NOI18N
        nadawcaPanel.add(SapNad, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 90, -1));

        NazwaNad.setName("NazwaNad"); // NOI18N
        nadawcaPanel.add(NazwaNad, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 240, -1));

        jLabel29.setText(resourceMap.getString("jLabel29.text")); // NOI18N
        jLabel29.setName("jLabel29"); // NOI18N
        nadawcaPanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 20, 20));

        TelNad.setName("TelNad"); // NOI18N
        nadawcaPanel.add(TelNad, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 100, -1));

        jLabel79.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel79.setText(resourceMap.getString("jLabel79.text")); // NOI18N
        jLabel79.setName("jLabel79"); // NOI18N
        nadawcaPanel.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, 50, 20));

        KrajNad.setName("KrajNad"); // NOI18N
        nadawcaPanel.add(KrajNad, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 50, -1));

        downDownLeftPanel.add(nadawcaPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 460, 80));

        PozDanePanel.setBackground(resourceMap.getColor("PozDanePanel.background")); // NOI18N
        PozDanePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Pozostałe"));
        PozDanePanel.setName("PozDanePanel"); // NOI18N
        PozDanePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N
        PozDanePanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 16, -1, -1));

        ZawartPozDane.setName("ZawartPozDane"); // NOI18N
        PozDanePanel.add(ZawartPozDane, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 160, -1));

        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N
        PozDanePanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, 20));

        MpkPozDane.setName("MpkPozDane"); // NOI18N
        PozDanePanel.add(MpkPozDane, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 180, 20));

        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N
        PozDanePanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 20));

        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N
        PozDanePanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 54, -1, -1));

        NazwaDokPozDane.setName("NazwaDokPozDane"); // NOI18N
        PozDanePanel.add(NazwaDokPozDane, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 100, -1));

        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N
        PozDanePanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, -1, 20));

        refPobraniaPozDane.setName("refPobraniaPozDane"); // NOI18N
        PozDanePanel.add(refPobraniaPozDane, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 100, -1));

        UwagiPozDane.setName("UwagiPozDane"); // NOI18N
        PozDanePanel.add(UwagiPozDane, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 380, -1));

        jLabel76.setText(resourceMap.getString("jLabel76.text")); // NOI18N
        jLabel76.setName("jLabel76"); // NOI18N
        PozDanePanel.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, -1, 20));

        codAccount.setName("codAccount"); // NOI18N
        PozDanePanel.add(codAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 100, -1));

        downDownLeftPanel.add(PozDanePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 460, 80));

        kwotyPanel.setBackground(resourceMap.getColor("kwotyPanel.background")); // NOI18N
        kwotyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Kwoty"));
        kwotyPanel.setName("kwotyPanel"); // NOI18N
        kwotyPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel55.setText(resourceMap.getString("jLabel55.text")); // NOI18N
        jLabel55.setName("jLabel55"); // NOI18N
        kwotyPanel.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 20));

        jLabel56.setText(resourceMap.getString("jLabel56.text")); // NOI18N
        jLabel56.setName("jLabel56"); // NOI18N
        kwotyPanel.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, 20));

        tfOplPEX.setFont(resourceMap.getFont("tfOplPEX.font")); // NOI18N
        tfOplPEX.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplPEX.setName("tfOplPEX"); // NOI18N
        kwotyPanel.add(tfOplPEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 50, 20));

        jLabel57.setText(resourceMap.getString("jLabel57.text")); // NOI18N
        jLabel57.setName("jLabel57"); // NOI18N
        kwotyPanel.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 20, 20));

        tfOplPDR.setFont(resourceMap.getFont("tfOplPDR.font")); // NOI18N
        tfOplPDR.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplPDR.setName("tfOplPDR"); // NOI18N
        kwotyPanel.add(tfOplPDR, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 50, 20));

        jLabel58.setText(resourceMap.getString("jLabel58.text")); // NOI18N
        jLabel58.setName("jLabel58"); // NOI18N
        kwotyPanel.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 20));

        tfOplCOD.setFont(resourceMap.getFont("tfOplCOD.font")); // NOI18N
        tfOplCOD.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplCOD.setName("tfOplCOD"); // NOI18N
        kwotyPanel.add(tfOplCOD, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 50, 20));

        tfOplUBE.setFont(resourceMap.getFont("tfOplUBE.font")); // NOI18N
        tfOplUBE.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplUBE.setName("tfOplUBE"); // NOI18N
        kwotyPanel.add(tfOplUBE, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 50, 20));

        jLabel60.setText(resourceMap.getString("jLabel60.text")); // NOI18N
        jLabel60.setName("jLabel60"); // NOI18N
        kwotyPanel.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));

        tfOplROD.setFont(resourceMap.getFont("tfOplROD.font")); // NOI18N
        tfOplROD.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplROD.setName("tfOplROD"); // NOI18N
        kwotyPanel.add(tfOplROD, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 120, 20));

        jLabel35.setText(resourceMap.getString("jLabel35.text")); // NOI18N
        jLabel35.setName("jLabel35"); // NOI18N
        kwotyPanel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 20));

        tfOplPOD.setFont(resourceMap.getFont("tfOplPOD.font")); // NOI18N
        tfOplPOD.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplPOD.setName("tfOplPOD"); // NOI18N
        kwotyPanel.add(tfOplPOD, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 120, 20));

        jLabel61.setText(resourceMap.getString("jLabel61.text")); // NOI18N
        jLabel61.setName("jLabel61"); // NOI18N
        kwotyPanel.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, 20));

        jLabel62.setText(resourceMap.getString("jLabel62.text")); // NOI18N
        jLabel62.setName("jLabel62"); // NOI18N
        kwotyPanel.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 20));

        tfOplNstEx.setFont(resourceMap.getFont("tfOplNstEx.font")); // NOI18N
        tfOplNstEx.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplNstEx.setName("tfOplNstEx"); // NOI18N
        kwotyPanel.add(tfOplNstEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 50, 20));

        jLabel63.setText(resourceMap.getString("jLabel63.text")); // NOI18N
        jLabel63.setName("jLabel63"); // NOI18N
        kwotyPanel.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 100, 20, 20));

        tfOplNstDr.setFont(resourceMap.getFont("tfOplNstDr.font")); // NOI18N
        tfOplNstDr.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplNstDr.setName("tfOplNstDr"); // NOI18N
        kwotyPanel.add(tfOplNstDr, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 50, 20));

        jLabel38.setText(resourceMap.getString("jLabel38.text")); // NOI18N
        jLabel38.setName("jLabel38"); // NOI18N
        kwotyPanel.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 20));

        tfOplTerm.setFont(resourceMap.getFont("tfOplTerm.font")); // NOI18N
        tfOplTerm.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplTerm.setName("tfOplTerm"); // NOI18N
        kwotyPanel.add(tfOplTerm, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 120, 20));

        jLabel64.setText(resourceMap.getString("jLabel64.text")); // NOI18N
        jLabel64.setName("jLabel64"); // NOI18N
        kwotyPanel.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, 20));

        tfOplNetto.setFont(resourceMap.getFont("tfOplNetto.font")); // NOI18N
        tfOplNetto.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplNetto.setName("tfOplNetto"); // NOI18N
        kwotyPanel.add(tfOplNetto, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 50, 20));

        jLabel65.setText(resourceMap.getString("jLabel65.text")); // NOI18N
        jLabel65.setName("jLabel65"); // NOI18N
        kwotyPanel.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 160, -1, 20));

        tfOplBrutto.setFont(resourceMap.getFont("tfOplBrutto.font")); // NOI18N
        tfOplBrutto.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplBrutto.setName("tfOplBrutto"); // NOI18N
        kwotyPanel.add(tfOplBrutto, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 50, 20));

        jLabel75.setText(resourceMap.getString("jLabel75.text")); // NOI18N
        jLabel75.setName("jLabel75"); // NOI18N
        kwotyPanel.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 20, 20, 20));

        labelPDI.setText(resourceMap.getString("labelPDI.text")); // NOI18N
        labelPDI.setName("labelPDI"); // NOI18N
        kwotyPanel.add(labelPDI, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, 20));

        tfOplPDI.setFont(resourceMap.getFont("tfOplPDI.font")); // NOI18N
        tfOplPDI.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplPDI.setName("tfOplPDI"); // NOI18N
        kwotyPanel.add(tfOplPDI, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 50, 20));

        labelVIP.setText(resourceMap.getString("labelVIP.text")); // NOI18N
        labelVIP.setName("labelVIP"); // NOI18N
        kwotyPanel.add(labelVIP, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 140, 20, 20));

        tfOplVIP.setFont(resourceMap.getFont("tfOplVIP.font")); // NOI18N
        tfOplVIP.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfOplVIP.setName("tfOplVIP"); // NOI18N
        kwotyPanel.add(tfOplVIP, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 50, 20));

        downDownLeftPanel.add(kwotyPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, 190, 190));

        PreaNotPanel.setBackground(resourceMap.getColor("PreaNotPanel.background")); // NOI18N
        PreaNotPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Preawizacja I Notyfikacja"));
        PreaNotPanel.setName("PreaNotPanel"); // NOI18N
        PreaNotPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(resourceMap.getFont("jLabel21.font")); // NOI18N
        jLabel21.setText(resourceMap.getString("jLabel21.text")); // NOI18N
        jLabel21.setName("jLabel21"); // NOI18N
        PreaNotPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, 20));

        jLabel22.setText(resourceMap.getString("jLabel22.text")); // NOI18N
        jLabel22.setName("jLabel22"); // NOI18N
        PreaNotPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 10));

        PreawEmail.setFont(resourceMap.getFont("PreawEmail.font")); // NOI18N
        PreawEmail.setName("PreawEmail"); // NOI18N
        PreaNotPanel.add(PreawEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 70, 20));

        PreawSms.setFont(resourceMap.getFont("PreawSms.font")); // NOI18N
        PreawSms.setName("PreawSms"); // NOI18N
        PreaNotPanel.add(PreawSms, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 70, 20));

        jLabel24.setFont(resourceMap.getFont("jLabel24.font")); // NOI18N
        jLabel24.setText(resourceMap.getString("jLabel24.text")); // NOI18N
        jLabel24.setName("jLabel24"); // NOI18N
        PreaNotPanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, 20));

        NotyfEmail.setFont(resourceMap.getFont("NotyfEmail.font")); // NOI18N
        NotyfEmail.setName("NotyfEmail"); // NOI18N
        PreaNotPanel.add(NotyfEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 70, 20));

        NotyfSms.setFont(resourceMap.getFont("NotyfSms.font")); // NOI18N
        NotyfSms.setName("NotyfSms"); // NOI18N
        PreaNotPanel.add(NotyfSms, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 70, 20));

        jLabel26.setText(resourceMap.getString("jLabel26.text")); // NOI18N
        jLabel26.setName("jLabel26"); // NOI18N
        PreaNotPanel.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));

        downDownLeftPanel.add(PreaNotPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 330, 190, 80));

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tableRefNad.setBackground(resourceMap.getColor("tableRefNad.background")); // NOI18N
        tableRefNad.setFont(resourceMap.getFont("tableRefNad.font")); // NOI18N
        tableRefNad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableRefNad.setGridColor(resourceMap.getColor("tableRefNad.gridColor")); // NOI18N
        tableRefNad.setName("tableRefNad"); // NOI18N
        jScrollPane2.setViewportView(tableRefNad);

        downDownLeftPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 300, 120, 120));

        jbPdf.setText(resourceMap.getString("jbPdf.text")); // NOI18N
        jbPdf.setToolTipText(resourceMap.getString("jbPdf.toolTipText")); // NOI18N
        jbPdf.setName("jbPdf"); // NOI18N
        jbPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPdfActionPerformed(evt);
            }
        });
        downDownLeftPanel.add(jbPdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 420, 50, 20));

        PdfText.setName("PdfText"); // NOI18N
        downDownLeftPanel.add(PdfText, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 640, -1));

        uslugiPanel.setBackground(resourceMap.getColor("uslugiPanel.background")); // NOI18N
        uslugiPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Usługi"));
        uslugiPanel.setName("uslugiPanel"); // NOI18N
        uslugiPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbOdbiorWlasny.setBackground(resourceMap.getColor("cbOdbiorWlasny.background")); // NOI18N
        cbOdbiorWlasny.setFont(resourceMap.getFont("cbOdbiorWlasny.font")); // NOI18N
        cbOdbiorWlasny.setText(resourceMap.getString("cbOdbiorWlasny.text")); // NOI18N
        cbOdbiorWlasny.setToolTipText(resourceMap.getString("cbOdbiorWlasny.toolTipText")); // NOI18N
        cbOdbiorWlasny.setName("cbOdbiorWlasny"); // NOI18N
        uslugiPanel.add(cbOdbiorWlasny, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 13, -1, 15));

        cb1722.setBackground(resourceMap.getColor("cb1722.background")); // NOI18N
        cb1722.setText(resourceMap.getString("cb1722.text")); // NOI18N
        cb1722.setToolTipText(resourceMap.getString("cb1722.toolTipText")); // NOI18N
        cb1722.setName("cb1722"); // NOI18N
        uslugiPanel.add(cb1722, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 28, -1, 15));

        cbDostSob.setBackground(resourceMap.getColor("cbDostSob.background")); // NOI18N
        cbDostSob.setText(resourceMap.getString("cbDostSob.text")); // NOI18N
        cbDostSob.setToolTipText(resourceMap.getString("cbDostSob.toolTipText")); // NOI18N
        cbDostSob.setName("cbDostSob"); // NOI18N
        uslugiPanel.add(cbDostSob, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 43, -1, 15));

        cbOdbSob.setBackground(resourceMap.getColor("cbOdbSob.background")); // NOI18N
        cbOdbSob.setText(resourceMap.getString("cbOdbSob.text")); // NOI18N
        cbOdbSob.setToolTipText(resourceMap.getString("cbOdbSob.toolTipText")); // NOI18N
        cbOdbSob.setName("cbOdbSob"); // NOI18N
        uslugiPanel.add(cbOdbSob, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 58, -1, 15));

        cbPotwDor.setBackground(resourceMap.getColor("cbPotwDor.background")); // NOI18N
        cbPotwDor.setText(resourceMap.getString("cbPotwDor.text")); // NOI18N
        cbPotwDor.setToolTipText(resourceMap.getString("cbPotwDor.toolTipText")); // NOI18N
        cbPotwDor.setName("cbPotwDor"); // NOI18N
        uslugiPanel.add(cbPotwDor, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 73, -1, 15));

        cbZwrDok.setBackground(resourceMap.getColor("cbZwrDok.background")); // NOI18N
        cbZwrDok.setText(resourceMap.getString("cbZwrDok.text")); // NOI18N
        cbZwrDok.setToolTipText(resourceMap.getString("cbZwrDok.toolTipText")); // NOI18N
        cbZwrDok.setName("cbZwrDok"); // NOI18N
        uslugiPanel.add(cbZwrDok, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 88, -1, 15));

        cbPDI.setBackground(resourceMap.getColor("cbPDI.background")); // NOI18N
        cbPDI.setText(resourceMap.getString("cbPDI.text")); // NOI18N
        cbPDI.setToolTipText(resourceMap.getString("cbPDI.toolTipText")); // NOI18N
        cbPDI.setAutoscrolls(true);
        cbPDI.setName("cbPDI"); // NOI18N
        uslugiPanel.add(cbPDI, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 103, -1, 15));

        cbVIP.setBackground(resourceMap.getColor("cbVIP.background")); // NOI18N
        cbVIP.setText(resourceMap.getString("cbVIP.text")); // NOI18N
        cbVIP.setToolTipText(resourceMap.getString("cbVIP.toolTipText")); // NOI18N
        cbVIP.setName("cbVIP"); // NOI18N
        uslugiPanel.add(cbVIP, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 118, -1, 15));

        downDownLeftPanel.add(uslugiPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, 110, 170));

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        tableParcels.setBackground(resourceMap.getColor("tableParcels.background")); // NOI18N
        tableParcels.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableParcels.setGridColor(resourceMap.getColor("tableParcels.gridColor")); // NOI18N
        tableParcels.setName("tableParcels"); // NOI18N
        jScrollPane3.setViewportView(tableParcels);

        downDownLeftPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 230, 120));

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        tableTnTROD.setBackground(resourceMap.getColor("tableTnTROD.background")); // NOI18N
        tableTnTROD.setFont(resourceMap.getFont("tableTnTROD.font")); // NOI18N
        tableTnTROD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableTnTROD.setFocusTraversalPolicyProvider(true);
        tableTnTROD.setGridColor(resourceMap.getColor("tableTnTROD.gridColor")); // NOI18N
        tableTnTROD.setName("tableTnTROD"); // NOI18N
        jScrollPane4.setViewportView(tableTnTROD);

        downDownLeftPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, 110, 120));

        innePanel.setBackground(resourceMap.getColor("innePanel.background")); // NOI18N
        innePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("innePanel.border.title"))); // NOI18N
        innePanel.setName("innePanel"); // NOI18N
        innePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbBLP.setBackground(resourceMap.getColor("cbBLP.background")); // NOI18N
        cbBLP.setText(resourceMap.getString("cbBLP.text")); // NOI18N
        cbBLP.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        cbBLP.setName("cbBLP"); // NOI18N
        innePanel.add(cbBLP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        innePanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 30, 20));

        tfKurier.setText(resourceMap.getString("tfKurier.text")); // NOI18N
        tfKurier.setName("tfKurier"); // NOI18N
        innePanel.add(tfKurier, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 40, 20));

        jLabel23.setText(resourceMap.getString("jLabel23.text")); // NOI18N
        jLabel23.setName("jLabel23"); // NOI18N
        innePanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, 20));

        tfTerminalNadawcy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfTerminalNadawcy.setText(resourceMap.getString("tfTerminalNadawcy.text")); // NOI18N
        tfTerminalNadawcy.setName("tfTerminalNadawcy"); // NOI18N
        innePanel.add(tfTerminalNadawcy, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 30, 20));

        jLabel72.setText(resourceMap.getString("jLabel72.text")); // NOI18N
        jLabel72.setName("jLabel72"); // NOI18N
        innePanel.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 20));

        tfShipmentId.setFont(resourceMap.getFont("tfShipmentId.font")); // NOI18N
        tfShipmentId.setText(resourceMap.getString("tfShipmentId.text")); // NOI18N
        tfShipmentId.setName("tfShipmentId"); // NOI18N
        innePanel.add(tfShipmentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 90, 20));

        jLabel69.setText(resourceMap.getString("jLabel69.text")); // NOI18N
        jLabel69.setName("jLabel69"); // NOI18N
        innePanel.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, -1, -1));

        jLabel70.setText(resourceMap.getString("jLabel70.text")); // NOI18N
        jLabel70.setName("jLabel70"); // NOI18N
        innePanel.add(jLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 50, 20));

        tfDataNadania.setText(resourceMap.getString("tfDataNadania.text")); // NOI18N
        tfDataNadania.setName("tfDataNadania"); // NOI18N
        innePanel.add(tfDataNadania, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 70, -1));

        tfInsertt.setText(resourceMap.getString("tfInsertt.text")); // NOI18N
        tfInsertt.setName("tfInsertt"); // NOI18N
        innePanel.add(tfInsertt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 110, -1));

        tfTerminalOdbiorcy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfTerminalOdbiorcy.setName("tfTerminalOdbiorcy"); // NOI18N
        innePanel.add(tfTerminalOdbiorcy, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 30, 20));

        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N
        innePanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 20));

        jLabel77.setText(resourceMap.getString("jLabel77.text")); // NOI18N
        jLabel77.setName("jLabel77"); // NOI18N
        innePanel.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 20));

        tfSource.setFont(resourceMap.getFont("tfSource.font")); // NOI18N
        tfSource.setName("tfSource"); // NOI18N
        innePanel.add(tfSource, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 90, 20));

        lblReturns.setText(resourceMap.getString("lblReturns.text")); // NOI18N
        lblReturns.setName("lblReturns"); // NOI18N
        innePanel.add(lblReturns, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, -1, 20));

        comboReturns.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboReturns.setName("comboReturns"); // NOI18N
        comboReturns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboReturnsActionPerformed(evt);
            }
        });
        innePanel.add(comboReturns, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 100, -1));

        jLabel80.setText(resourceMap.getString("jLabel80.text")); // NOI18N
        jLabel80.setName("jLabel80"); // NOI18N
        innePanel.add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, 20));

        tfBC.setName("tfBC"); // NOI18N
        innePanel.add(tfBC, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 20, 20));

        jLabel81.setText(resourceMap.getString("jLabel81.text")); // NOI18N
        jLabel81.setName("jLabel81"); // NOI18N
        innePanel.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, 20));

        tfDelivDays.setName("tfDelivDays"); // NOI18N
        innePanel.add(tfDelivDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 20, 20));

        downDownLeftPanel.add(innePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 310, 110));

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbRefNad.setBackground(resourceMap.getColor("cbRefNad.background")); // NOI18N
        cbRefNad.setText(resourceMap.getString("cbRefNad.text")); // NOI18N
        cbRefNad.setToolTipText(resourceMap.getString("cbRefNad.toolTipText")); // NOI18N
        cbRefNad.setName("cbRefNad"); // NOI18N
        jPanel1.add(cbRefNad, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 15, -1, 20));

        cbParcelShop.setBackground(resourceMap.getColor("cbParcelShop.background")); // NOI18N
        cbParcelShop.setText(resourceMap.getString("cbParcelShop.text")); // NOI18N
        cbParcelShop.setToolTipText(resourceMap.getString("cbParcelShop.toolTipText")); // NOI18N
        cbParcelShop.setName("cbParcelShop"); // NOI18N
        jPanel1.add(cbParcelShop, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 32, 120, 20));

        cbNeighbour.setBackground(resourceMap.getColor("cbNeighbour.background")); // NOI18N
        cbNeighbour.setText(resourceMap.getString("cbNeighbour.text")); // NOI18N
        cbNeighbour.setToolTipText(resourceMap.getString("cbNeighbour.toolTipText")); // NOI18N
        cbNeighbour.setName("cbNeighbour"); // NOI18N
        jPanel1.add(cbNeighbour, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 67, -1, 20));

        cbPackStation.setBackground(resourceMap.getColor("cbPackStation.background")); // NOI18N
        cbPackStation.setText(resourceMap.getString("cbPackStation.text")); // NOI18N
        cbPackStation.setToolTipText(resourceMap.getString("cbPackStation.toolTipText")); // NOI18N
        cbPackStation.setName("cbPackStation"); // NOI18N
        jPanel1.add(cbPackStation, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 49, -1, 20));

        downDownLeftPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, 110, 100));

        jbElements.setText(resourceMap.getString("jbElements.text")); // NOI18N
        jbElements.setName("jbElements"); // NOI18N
        jbElements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbElementsActionPerformed(evt);
            }
        });
        downDownLeftPanel.add(jbElements, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 420, -1, -1));

        ShipmentSplitPane.setLeftComponent(downDownLeftPanel);

        downDownRightPanel.setBackground(resourceMap.getColor("downDownRightPanel.background")); // NOI18N
        downDownRightPanel.setAutoscrolls(true);
        downDownRightPanel.setMinimumSize(new java.awt.Dimension(80, 80));
        downDownRightPanel.setName("downDownRightPanel"); // NOI18N
        downDownRightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        daneLpPanel.setBackground(resourceMap.getColor("daneLpPanel.background")); // NOI18N
        daneLpPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Dane LP"));
        daneLpPanel.setName("daneLpPanel"); // NOI18N
        daneLpPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setText(resourceMap.getString("jLabel27.text")); // NOI18N
        jLabel27.setName("jLabel27"); // NOI18N
        daneLpPanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 20));

        jLabel28.setText(resourceMap.getString("jLabel28.text")); // NOI18N
        jLabel28.setName("jLabel28"); // NOI18N
        daneLpPanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 20));

        jLabel30.setText(resourceMap.getString("jLabel30.text")); // NOI18N
        jLabel30.setName("jLabel30"); // NOI18N
        daneLpPanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 20));

        jLabel31.setText(resourceMap.getString("jLabel31.text")); // NOI18N
        jLabel31.setName("jLabel31"); // NOI18N
        daneLpPanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 20));

        jLabel32.setText(resourceMap.getString("jLabel32.text")); // NOI18N
        jLabel32.setName("jLabel32"); // NOI18N
        daneLpPanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, 20));

        jLabel33.setText(resourceMap.getString("jLabel33.text")); // NOI18N
        jLabel33.setName("jLabel33"); // NOI18N
        daneLpPanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 20));

        jLabel34.setText(resourceMap.getString("jLabel34.text")); // NOI18N
        jLabel34.setName("jLabel34"); // NOI18N
        daneLpPanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, 20));

        jLabel36.setText(resourceMap.getString("jLabel36.text")); // NOI18N
        jLabel36.setName("jLabel36"); // NOI18N
        daneLpPanel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel37.setText(resourceMap.getString("jLabel37.text")); // NOI18N
        jLabel37.setName("jLabel37"); // NOI18N
        daneLpPanel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 320, -1, 20));

        jLabel39.setText(resourceMap.getString("jLabel39.text")); // NOI18N
        jLabel39.setName("jLabel39"); // NOI18N
        daneLpPanel.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        jLabel40.setText(resourceMap.getString("jLabel40.text")); // NOI18N
        jLabel40.setName("jLabel40"); // NOI18N
        daneLpPanel.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        jLabel41.setText(resourceMap.getString("jLabel41.text")); // NOI18N
        jLabel41.setName("jLabel41"); // NOI18N
        daneLpPanel.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        jLabel42.setText(resourceMap.getString("jLabel42.text")); // NOI18N
        jLabel42.setName("jLabel42"); // NOI18N
        daneLpPanel.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        jLabel43.setText(resourceMap.getString("jLabel43.text")); // NOI18N
        jLabel43.setName("jLabel43"); // NOI18N
        daneLpPanel.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        jLabel44.setText(resourceMap.getString("jLabel44.text")); // NOI18N
        jLabel44.setName("jLabel44"); // NOI18N
        daneLpPanel.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        jLabel46.setText(resourceMap.getString("jLabel46.text")); // NOI18N
        jLabel46.setName("jLabel46"); // NOI18N
        daneLpPanel.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        jLabel47.setText(resourceMap.getString("jLabel47.text")); // NOI18N
        jLabel47.setName("jLabel47"); // NOI18N
        daneLpPanel.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));

        jLabel48.setText(resourceMap.getString("jLabel48.text")); // NOI18N
        jLabel48.setName("jLabel48"); // NOI18N
        daneLpPanel.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        jLabel49.setText(resourceMap.getString("jLabel49.text")); // NOI18N
        jLabel49.setName("jLabel49"); // NOI18N
        daneLpPanel.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jLabel50.setName("jLabel50"); // NOI18N
        daneLpPanel.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        LpProdukt.setFont(resourceMap.getFont("LpProdukt.font")); // NOI18N
        LpProdukt.setName("LpProdukt"); // NOI18N
        daneLpPanel.add(LpProdukt, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 90, 20));

        LpPlatnik.setFont(resourceMap.getFont("LpPlatnik.font")); // NOI18N
        LpPlatnik.setName("LpPlatnik"); // NOI18N
        daneLpPanel.add(LpPlatnik, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 90, 20));

        LpPk.setFont(resourceMap.getFont("LpPk.font")); // NOI18N
        LpPk.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpPk.setName("LpPk"); // NOI18N
        daneLpPanel.add(LpPk, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 90, 20));

        Lp5kg.setFont(resourceMap.getFont("Lp5kg.font")); // NOI18N
        Lp5kg.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Lp5kg.setName("Lp5kg"); // NOI18N
        daneLpPanel.add(Lp5kg, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 90, 20));

        Lp10kg.setFont(resourceMap.getFont("Lp10kg.font")); // NOI18N
        Lp10kg.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Lp10kg.setName("Lp10kg"); // NOI18N
        daneLpPanel.add(Lp10kg, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 90, 20));

        Lp20kg.setFont(resourceMap.getFont("Lp20kg.font")); // NOI18N
        Lp20kg.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Lp20kg.setName("Lp20kg"); // NOI18N
        daneLpPanel.add(Lp20kg, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 90, 20));

        Lp31kg.setFont(resourceMap.getFont("Lp31kg.font")); // NOI18N
        Lp31kg.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        Lp31kg.setName("Lp31kg"); // NOI18N
        daneLpPanel.add(Lp31kg, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 90, 20));

        LpNiestandEx.setFont(resourceMap.getFont("LpNiestandEx.font")); // NOI18N
        LpNiestandEx.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpNiestandEx.setName("LpNiestandEx"); // NOI18N
        daneLpPanel.add(LpNiestandEx, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 40, 20));

        LpDrBezPalet.setFont(resourceMap.getFont("LpDrBezPalet.font")); // NOI18N
        LpDrBezPalet.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpDrBezPalet.setName("LpDrBezPalet"); // NOI18N
        daneLpPanel.add(LpDrBezPalet, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 90, 20));

        LpWagaFiz.setFont(resourceMap.getFont("LpWagaFiz.font")); // NOI18N
        LpWagaFiz.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpWagaFiz.setName("LpWagaFiz"); // NOI18N
        daneLpPanel.add(LpWagaFiz, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 40, 20));

        LpWagaPrz.setFont(resourceMap.getFont("LpWagaPrz.font")); // NOI18N
        LpWagaPrz.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpWagaPrz.setName("LpWagaPrz"); // NOI18N
        daneLpPanel.add(LpWagaPrz, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 40, 20));

        LpOdleglosc.setFont(resourceMap.getFont("LpOdleglosc.font")); // NOI18N
        LpOdleglosc.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpOdleglosc.setName("LpOdleglosc"); // NOI18N
        daneLpPanel.add(LpOdleglosc, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 90, 20));

        LpPal400.setFont(resourceMap.getFont("LpPal400.font")); // NOI18N
        LpPal400.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpPal400.setName("LpPal400"); // NOI18N
        daneLpPanel.add(LpPal400, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 90, 20));

        LpPal600.setFont(resourceMap.getFont("LpPal600.font")); // NOI18N
        LpPal600.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpPal600.setName("LpPal600"); // NOI18N
        daneLpPanel.add(LpPal600, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 90, 20));

        LpPal800.setFont(resourceMap.getFont("LpPal800.font")); // NOI18N
        LpPal800.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpPal800.setName("LpPal800"); // NOI18N
        daneLpPanel.add(LpPal800, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 90, 20));

        LpPal1000.setFont(resourceMap.getFont("LpPal1000.font")); // NOI18N
        LpPal1000.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpPal1000.setName("LpPal1000"); // NOI18N
        daneLpPanel.add(LpPal1000, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 90, 20));

        LpNiestandDr.setFont(resourceMap.getFont("LpNiestandDr.font")); // NOI18N
        LpNiestandDr.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpNiestandDr.setName("LpNiestandDr"); // NOI18N
        daneLpPanel.add(LpNiestandDr, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 30, 20));

        LpZwrPalet.setFont(resourceMap.getFont("LpZwrPalet.font")); // NOI18N
        LpZwrPalet.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpZwrPalet.setName("LpZwrPalet"); // NOI18N
        daneLpPanel.add(LpZwrPalet, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, 90, 20));

        LpPobranie.setFont(resourceMap.getFont("LpPobranie.font")); // NOI18N
        LpPobranie.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpPobranie.setName("LpPobranie"); // NOI18N
        daneLpPanel.add(LpPobranie, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 90, 20));

        LpUbezp.setFont(resourceMap.getFont("LpUbezp.font")); // NOI18N
        LpUbezp.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpUbezp.setName("LpUbezp"); // NOI18N
        daneLpPanel.add(LpUbezp, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 90, 20));

        LpPal200.setFont(resourceMap.getFont("LpPal200.font")); // NOI18N
        LpPal200.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpPal200.setName("LpPal200"); // NOI18N
        daneLpPanel.add(LpPal200, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 90, 20));

        LpSztukDr.setFont(resourceMap.getFont("LpSztukDr.font")); // NOI18N
        LpSztukDr.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        LpSztukDr.setName("LpSztukDr"); // NOI18N
        daneLpPanel.add(LpSztukDr, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 90, 20));

        jLabel51.setText(resourceMap.getString("jLabel51.text")); // NOI18N
        jLabel51.setName("jLabel51"); // NOI18N
        daneLpPanel.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, 20));

        jLabel52.setText(resourceMap.getString("jLabel52.text")); // NOI18N
        jLabel52.setName("jLabel52"); // NOI18N
        daneLpPanel.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 160, -1, 20));

        jLabel53.setText(resourceMap.getString("jLabel53.text")); // NOI18N
        jLabel53.setName("jLabel53"); // NOI18N
        daneLpPanel.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, 20));

        jLabel45.setText(resourceMap.getString("jLabel45.text")); // NOI18N
        jLabel45.setName("jLabel45"); // NOI18N
        daneLpPanel.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        jLabel54.setText(resourceMap.getString("jLabel54.text")); // NOI18N
        jLabel54.setName("jLabel54"); // NOI18N
        daneLpPanel.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, -1, 20));

        downDownRightPanel.add(daneLpPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, 430));

        ShipmentSplitPane.setRightComponent(downDownRightPanel);

        downDownPanel.add(ShipmentSplitPane);

        jSplitPane2.setRightComponent(downDownPanel);

        downPanel.setViewportView(jSplitPane2);

        jSplitPane1.setRightComponent(downPanel);

        add(jSplitPane1);
    }// </editor-fold>//GEN-END:initComponents

    private void ShowShipment(String p_CustId, String p_ShipmentId) {
        // Oczyszczanie pól JTextField, JCheckBox, JTable
        YPFunctions.clearContainer(ShipmentSplitPane);
        currentIdCas = p_CustId;

        // Nr SAP dla multiSAP
        String sapMultiSAP = "";

        // Numer LP
        tfShipmentId.setText(p_ShipmentId);

        // Dane przesyłki, zapisane w formacie dla wydruku w kodzie PDF417
        String query = "select pdf, source from data_ship_pdf where no_no=? order by id desc";
        Vector pars = new Vector(Arrays.asList(p_ShipmentId));

        Vector<String> v = GlobalData.oraSession.selectFirstRecordToVector(query, pars);
        if (!v.isEmpty()) {
            PdfText.setText(v.elementAt(0));
            PdfText.setCaretPosition(0);
            sapMultiSAP = YPFunctions.getTokenAt(4, v.elementAt(0), ";", "");
            tfSource.setText(v.elementAt(1));
        }

        // Odbiorca

// XBORDER
        String toServicePoint = "";
        if (!v.isEmpty()) {
            toServicePoint = YPFunctions.getTokenAt(94, v.elementAt(0), ";", "");
        }
        
        cbParcelShop.setSelected(false);
        // Dla Service Point i finalnego odbiorcy wyświetlamy SAP ServicePoint, a w
        // pozostałych polach dane odbiorcy finalnego
        if (toServicePoint.equals("T"))
            query = "select c.NAME, "
                    + "s.odbiorca_k.oid,"
                    + "c.ADDR_ZIPCODE,"
                    + "c.ADDR_STREET,"
                    + "c.ADDR_STREETNO,"
                    + "c.ADDR_CITY,"
                    + "c.PHONE,"
                    + "c.ADDR_COUNTRY "
                    + " from data_clients c, data_shipments s"
                    + " where s.id_cust=? "
                    + " and c.id_cust=? "
                    + " and s.no_no=? "
                    + " and C.OID_ID=S.DPST_K.oid "
                    + " and s.is_deleted='N'";
        else
            query = "select NAME, " +
                    "SHORTNAME, " +
                    "ADDR_ZIPCODE, " +
                    "ADDR_STREET, " +
                    "ADDR_STREETNO, " +
                    "ADDR_CITY, " +
                    "PHONE," +
                    "ADDR_COUNTRY " +
                    "from data_clients " +
                    "where id_cust=?  and " +
                    "OID_ID=" +
                    "(select s.odbiorca_k.oid " +
                    "from data_shipments s " +
                    "where id_cust=? and " +
                    "no_no=? and s.is_deleted='N')";
        pars = new Vector(Arrays.asList(Integer.parseInt(p_CustId),
                Integer.parseInt(p_CustId),
                p_ShipmentId));
        v = GlobalData.oraSession.selectFirstRecordToVector(query, pars);
        if (!v.isEmpty()) {
            NazwaSkrocOdb.setText(v.elementAt(1));
            NazwaOdb.setText(v.elementAt(0));
            KodPocztOdb.setText(v.elementAt(2));
            MiastoOdb.setText(v.elementAt(5));
            UlicaOdb.setText(v.elementAt(3));
            DomOdb.setText(v.elementAt(4));
            TelOdb.setText(v.elementAt(6));
            KrajOdb.setText(v.elementAt(7));
// XBORDER
            cbParcelShop.setSelected((v.elementAt(1).trim().length() == 7) &&
                                     v.elementAt(1).trim().startsWith("45"));
        }
        
        btnParcelShop.setVisible(cbParcelShop.isSelected());
 
        // Nadawca
/*
        query = "select ID_SAP," +
                "NAZWA," +
                "KOD_P," +
                "MIASTO," +
                "ULICA," +
                "NR_DOMU," +
                "TELEPHONE " +
                "from customers_sap " +
                "where id_sap=" +
                "(select s.nadawca_k.oid " +
                "from data_shipments s " +
                "where id_cust=? and " +
                "no_no=? and s.is_deleted='N')";
        pars = new Vector(Arrays.asList(Integer.parseInt(p_CustId),
                p_ShipmentId));

 */
        
        
        
        query = "select to_char(ID_SAP)," +
                "NAZWA," +
                "KOD_P," +
                "MIASTO," +
                "ULICA," +
                "NR_DOMU," +
                "TELEPHONE," +
                "KRAJ " +
                "from customers_sap " +
                "where id_sap=" +
                "(select s.nadawca_k.oid " +
                "from data_shipments s " +
                "where id_cust=? and " +
                "no_no=? and s.is_deleted='N') " +

                "Union " +
                
                "select SHORTNAME, " +
                "NAME,  " +
                "ADDR_ZIPCODE,  " +
                "ADDR_CITY, " +
                "ADDR_STREET,  " +
                "ADDR_STREETNO,  " +
                "PHONE,  " +
                "ADDR_COUNTRY " +
                "from data_clients  " +
                "where id_cust=?  and " + 
                "OID_ID= " +
                "(select s.nadawca_k.oid  " +
                "from data_shipments s  " +
                "where id_cust=? and  " +
                "no_no=? and s.is_deleted='N')";
        pars = new Vector(Arrays.asList(Integer.parseInt(p_CustId),
                p_ShipmentId, Integer.parseInt(p_CustId),Integer.parseInt(p_CustId), p_ShipmentId ));


        v = GlobalData.oraSession.selectFirstRecordToVector(query, pars);
        if (v.isEmpty()) {
            if (GlobalData.oraSession.selectString(
                    "select multi_sap from customers where id_cust=?",
                    new Vector(Arrays.asList(Integer.parseInt(p_CustId))),
                    "N").equals("T"))
            {
                query = "select sap,nazwa,kod_p,miasto,ulica,dom,tel,'PL' " +
                        "from dict_senders " +
                        "where id_cust=? and sap=?";
                pars = new Vector(Arrays.asList(Integer.parseInt(p_CustId), sapMultiSAP));
                v = GlobalData.oraSession.selectFirstRecordToVector(query, pars);
                if (v.isEmpty())
                {
                    SapNad.setText("BRAK");
                    NazwaNad.setText("BRAK DANYCH !!!");
                }
                else {
                        SapNad.setText(v.elementAt(0));
                        NazwaNad.setText(v.elementAt(1));
                        KodPocztNad.setText(v.elementAt(2));
                        MiastoNad.setText(v.elementAt(3));
                        UlicaNad.setText(v.elementAt(4));
                        DomNad.setText(v.elementAt(5));
                        TelNad.setText(v.elementAt(6));
                        KrajNad.setText(v.elementAt(7));
                    }
            }
            else
            {
                SapNad.setText("BRAK");
                NazwaNad.setText("BRAK DANYCH !!!");
            }
        } else {
            SapNad.setText(v.elementAt(0));
            NazwaNad.setText(v.elementAt(1));
            KodPocztNad.setText(v.elementAt(2));
            MiastoNad.setText(v.elementAt(3));
            UlicaNad.setText(v.elementAt(4));
            DomNad.setText(v.elementAt(5));
            TelNad.setText(v.elementAt(6));
            KrajNad.setText(v.elementAt(7));
        }

        // Inne dane przesyłki

        query = "SELECT d.rodzaj, d.kat1, d.kat2, d.kat3, d.kat4, d.sztuk, d.platnik, d.platnosc," +
                "d.waga,d.waga_typ, d.odleglosc, d.dod1, d.sendescr, d.pal_kli, d.ubmodif," +
                "d.zwrpobr,d.cod_refr, d.delvxtime, d.delvsatrd, d.picksatrd, d.lpicktime, d.rachunek," +
                "d.doer_no, d.tserv, d.kat5, d.kat6, d.u_zwrot, d.u_ubezp, d.spergt," +
                "d.u_owl, d.u_trm,d.pal_a, d.pal_b, d.pal_c, d.kat0, d.opl_podst," +
                "d.pobranie, d.opl_pobran,d.wartosc, d.opl_ubezp, d.opl_zwrot, d.opl_dxtime," +
                "d.opl_dsatrd, d.opl_psatrd,d.opl_lptime, d.vat_sk, d.opl_sk," +
                "d.opl_couhir, d.opl_tserv, d.opl_pod_ex,d.opl_pod_pk, d.opl_pod_dr, d.opl_spergt," +
                "d.uwagi, d.TIME, d.opl_pod_n, d.u_pod_n,d.u_f_charge, d.opl_fuel_c, d.r_fuel_cl," +
                "d.u_blp, d.pal_b1, d.pal_b2, d.spergt_dr,d.opl_spe_dr," +
                "d.u_tt_rod, d.sad_am,d.cod_zap_p, d.pokn,d.TOTAL.netto,d.TOTAL.vat,d.TOTAL.brutto, " +
                "d.pkt_nad_region, d.pkt_odb_region, d.insertt,d.u_pdi,d.u_vip,d.opl_pdi,d.opl_vip,d.nazwa_rod," +
 //XBORDER        
                "d.os_kont,d.ek_packstation,d.neighBour_k.oid, d.BANKRACH, d.SHIPMENT_CONTENT, d.rec_type, d.delivery_days" +
                " " +
                "FROM data_shipments d " +
                "WHERE d.no_no=? and d.is_deleted='N'";
        pars = new Vector(Arrays.asList(p_ShipmentId));
        v = GlobalData.oraSession.selectFirstRecordToVector(query, pars);
        if (!v.isEmpty()) {
            LpProdukt.setText(v.elementAt(0));
            LpPlatnik.setText(v.elementAt(6) + v.elementAt(7) + (v.elementAt(68).equals("x") ? "(POKN)" : ""));
            LpPk.setText(v.elementAt(34));
            Lp5kg.setText(v.elementAt(1));
            Lp10kg.setText(v.elementAt(2));
            Lp20kg.setText(v.elementAt(3));
            Lp31kg.setText(v.elementAt(4));
            LpNiestandEx.setText(v.elementAt(28));
            LpNiestandDr.setText(v.elementAt(63));
            int IloscPalet200_1000 = YPFunctions.nvlParseInteger(v.elementAt(31)) +
                    YPFunctions.nvlParseInteger(v.elementAt(32)) +
                    YPFunctions.nvlParseInteger(v.elementAt(33)) +
                    YPFunctions.nvlParseInteger(v.elementAt(61)) +
                    YPFunctions.nvlParseInteger(v.elementAt(62));
            if (IloscPalet200_1000 > 0)
            {
                int IloscDrTotal = YPFunctions.nvlParseInteger(v.elementAt(24));
                LpDrBezPalet.setText("" + (IloscDrTotal - IloscPalet200_1000));
            }
            else
                 LpDrBezPalet.setText(v.elementAt(24));
            LpPal200.setText(v.elementAt(31));
            LpPal400.setText(v.elementAt(32));
            LpPal600.setText(v.elementAt(61));
            LpPal800.setText(v.elementAt(62));
            LpPal1000.setText(v.elementAt(33));
            int sztukDR = YPFunctions.nvlParseInteger(LpDrBezPalet.getText()) +
                          IloscPalet200_1000;
            LpSztukDr.setText(String.format("%d", sztukDR));
            LpWagaFiz.setText("");
            LpWagaPrz.setText("");
            if (v.elementAt(9).equals("R")) {
                LpWagaFiz.setText(v.elementAt(8));
            } else {
                LpWagaPrz.setText(v.elementAt(8));
            }

            LpOdleglosc.setText(v.elementAt(10));
            LpZwrPalet.setText(v.elementAt(13));
            LpPobranie.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(36))));
            LpUbezp.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(38))));


            tfOplPEX.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(49))));
            tfOplPDR.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(51))));
            tfOplCOD.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(37))));
            tfOplUBE.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(39))));
            tfOplROD.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(40))));
            tfOplPOD.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(55))));
            tfOplNstEx.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(52))));
            tfOplNstDr.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(64))));
            double sum = YPFunctions.nvlParseDouble(v.elementAt(41)) +
                    YPFunctions.nvlParseDouble(v.elementAt(42)) +
                    YPFunctions.nvlParseDouble(v.elementAt(43));
            tfOplTerm.setText(String.format("%1.2f", sum));
            tfOplNetto.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(69))));
            tfOplBrutto.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(71))));

            tfKurier.setText(v.elementAt(22));

            UwagiPozDane.setText(v.elementAt(53));
            refPobraniaPozDane.setText(v.elementAt(16));
            MpkPozDane.setText(v.elementAt(12));
            ZawartPozDane.setText(YPFunctions.nvlStr(v.elementAt(84)));
            NazwaDokPozDane.setText("");

// XBorder            
            tfTerminalNadawcy.setText(v.elementAt(72).trim());
            tfTerminalOdbiorcy.setText(v.elementAt(73).trim());
            
            if (v.elementAt(54).length() > 10)
                tfDataNadania.setText(v.elementAt(54).substring(0, 10));
            else
                tfDataNadania.setText(v.elementAt(54));
            tfDataNadania.setCaretPosition(0);
            String insertt = v.elementAt(74);
            if (insertt.length() > 19)
                insertt = insertt.substring(0, 19);
            tfInsertt.setText(insertt);
            tfInsertt.setCaretPosition(0);


            cbOdbiorWlasny.setSelected(v.elementAt(29).toUpperCase().equals("X"));
//XBORDER
            //usunięte do9 i do 11
            cb1722.setSelected(v.elementAt(17).equals("2200"));
            cbDostSob.setSelected(v.elementAt(18).toUpperCase().equals("X"));
            cbOdbSob.setSelected(v.elementAt(19).toUpperCase().equals("X"));
            cbPotwDor.setSelected(v.elementAt(56).toUpperCase().equals("X"));
            cbZwrDok.setSelected(v.elementAt(26).toUpperCase().equals("X"));

            cbBLP.setSelected(v.elementAt(60).toUpperCase().equals("X"));
            
            tfBC.setText(YPFunctions.nvlStr(v.elementAt(85)));
            int delivDays = YPFunctions.nvlParseInteger(v.elementAt(86));
            tfDelivDays.setText(String.format("%d", delivDays));

            tfOplPDI.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(77))));
            tfOplVIP.setText(String.format("%1.2f", YPFunctions.nvlParseDouble(v.elementAt(78))));
            cbPDI.setSelected(YPFunctions.nvlStr(v.elementAt(75)).toUpperCase().equals("X"));
            cbVIP.setSelected(YPFunctions.nvlStr(v.elementAt(76)).toUpperCase().equals("X"));
            NazwaDokPozDane.setText(YPFunctions.nvlStr(v.elementAt(79)));
            OsKont.setText(YPFunctions.nvlStr(v.elementAt(80)));
//XBORDER 
            cbPackStation.setSelected(!"".equals(v.elementAt(81).trim()));
            cbNeighbour.setSelected(!"".equals(v.elementAt(82).trim()));
            
            codAccount.setText(YPFunctions.nvlStr(v.elementAt(83)));
        }

        // Preawizacja i notyfikacja
        query = "Select NOTIFMAIL," +
                "NOTIFPHONE," +
                "PREAWIMAIL," +
                "PREAWIPHONE " +
                "from data_promig_z " +
                "where shipid=?";
        pars = new Vector(Arrays.asList(p_ShipmentId));
        v = GlobalData.oraSession.selectFirstRecordToVector(query, pars);

        if (!v.isEmpty()) {
            NotyfEmail.setText(v.isEmpty() ? "" : v.elementAt(0));
            NotyfSms.setText(v.isEmpty() ? "" : v.elementAt(1));
            PreawEmail.setText(v.isEmpty() ? "" : v.elementAt(2));
            PreawSms.setText(v.isEmpty() ? "" : v.elementAt(3));
            NotyfEmail.setCaretPosition(0);
            PreawEmail.setCaretPosition(0);
        }
        //  Numery paczek do przesyłki
        query = "select PREFIX||NO_PARCEL as \"Nr paczki\"," +
                "NO_LP||'/'||VOLUME as \"Order\" " +
                "from DATA_PARCELS " +
                "where NO_NO=?";

        YPFunctions.FillTableFromOra(query,
                pars,
                0,
                99999,
                tableParcels,
                new Vector(Arrays.asList(150, 30)),
                new Vector(),
                false,
                false,
                new Vector(),
                null,
                false);

        //  Numery Track&Trace dla dokumentów zwrotnych
        query = "select nr_rod \"T&T for ROD\" " +
                "from DATA_LP_ROD_P " +
                "where NO_NO=?";
        YPFunctions.FillTableFromOra(query, pars, 0, 99999, tableTnTROD,
                new Vector(Arrays.asList(150)),
                new Vector(), false, false,
                new Vector(),
                null,
                false);

        //  Referencję Nadawcy do przesyłki
        query = "select NO_REF \"Referencje nadawcy\" " +
                "from DATA_SHIP_REF " +
                "where NO_NO=?";
        YPFunctions.FillTableFromOra(query,
                pars,
                0,
                99999,
                tableRefNad,
                new Vector(Arrays.asList(150)),
                new Vector(),
                false,
                false,
                new Vector(),
                null,
                false);
//XBORDER        
        cbRefNad.setSelected(tableRefNad.getRowCount() > 0);
        
        if (GlobalData.connectB2BStarted)
        {        
            int recCount = Integer.parseInt(GlobalData.oraSession.selectString("select count(*) FROM CAS_DPST.DHL24_PRZESYLKI_PACZKI where NUMER_LISTU_PRZEWOZOWEGO=?",
                    new Vector(Arrays.asList(tfShipmentId.getText().toUpperCase())), "0"));
            jbElements.setVisible(recCount > 0);
        }
        else
            jbElements.setVisible(false);
            

        comboReturns.removeAllItems();

        if (GlobalData.returnsStarted)         {
           lblReturns.setVisible(true);
           comboReturns.setVisible(true);
            Vector<String> returns =
               GlobalData.oraSession.selectOneColumnToVector(
               "Select no_no from wspolne_dane_terminali.RETURN_SHIPMENTS where RELATED_WAYBILL_NUMBER=?",
               pars);
            if (returns.size() > 0)
            {
                comboReturns.addItem("");
                Iterator it = returns.iterator();
                while (it.hasNext())
                   comboReturns.addItem((String) it.next());
                comboReturns.setSelectedIndex(0);
            }
            else
            {
               lblReturns.setVisible(false);
               comboReturns.setVisible(false);
            }
        }
        else
        {
           lblReturns.setVisible(false);
           comboReturns.setVisible(false);
        }

    }

private void tableShipsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableShipsMouseClicked
    // Kliknięcie na linijce powoduje wyświetlenie szczegółów
    // Wyznaczamy numer linijki
    int row = tableShips.getSelectedRow();
    if (row != -1) {
                // Pokazujemy dane przesyłki
                ShowShipment(YPFunctions.strGet(tableShips,row, 1), YPFunctions.strGet(tableShips,row, 0));
    }
}//GEN-LAST:event_tableShipsMouseClicked

private void jbPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPdfActionPerformed
    // Kliknięcie na przycisk "???"
    // Wyświetlamy okno dialogowe dla pokazywania szczegółów przesyłanego
    // z aplikacji klientskiej CAS ciągu znaków
    ShowShipmentDetailsDialog frame = new ShowShipmentDetailsDialog(null, true, PdfText.getText());
    frame.setVisible(true);
}//GEN-LAST:event_jbPdfActionPerformed

private void tableShipsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableShipsKeyReleased
    // Uzytkownik porusza się po tablice tableShips za pomocą klawisz Up,Down ...,
    int row = tableShips.getSelectedRow();
    if (row != -1) {
                // Pokazujemy dane przesyłki
                ShowShipment(YPFunctions.strGet(tableShips,row, 1), YPFunctions.strGet(tableShips,row, 0));
    }
}//GEN-LAST:event_tableShipsKeyReleased

    private void ShowMainQuery(String p_query, int p_start, int p_end) {
        // Wyświetlamy listę przesyłek
        this.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.WAIT_CURSOR));
        YPFunctions.clearContainer(ShipmentSplitPane);
        YPFunctions.clearContainer(panelAllShipments);
        YPFunctions.FillTableFromOra(p_query,
                new Vector(),
                p_start,
                p_end,
                tableShips,
                new Vector(Arrays.asList(80, 80, 80, 80, 400,20)),
                new Vector(),
                false,
                true,
                new Vector(),
                new Vector(),
                true);
        this.setCursor(java.awt.Cursor.getDefaultCursor());
    }

    private void prepareAndShowMainQuery() {
        // Usuwamy informację z pół dolnej części ekranu
        YPFunctions.clearContainer(ShipmentSplitPane);
        // Przygotowujemy warunek dla zapytania SQL
        String subQuery = " d.time between to_date('" +
                YPFunctions.DateToString(dcOdDatyNadania.getDate()) +
                " 00:00:00','yyyy/mm/dd hh24:mi:ss')" +
                " and to_date('" +
                YPFunctions.DateToString(dcDoDatyNadania.getDate()) +
                " 23:59:59','yyyy/mm/dd hh24:mi:ss')";

        String sCasSap = tfIdCas.getText();
        // Jeśli wybrane ID CUST lub ID SAP
        if (! sCasSap.equals("")) {
            String firstToken = YPFunctions.getTokenAt(0, sCasSap, ",", "");
            if (firstToken.length()==7)
                subQuery += " and d.id_cust in (select id_cust from customers where id_sap in (" +
                              tfIdCas.getText() + "))";
            else
                subQuery += " and d.id_cust in (" + tfIdCas.getText() + ")";
        }

        String opiekun = (String)comboOpiekun.getSelectedItem();
        if ( ! opiekun.equals("*.*"))
            subQuery += " and d.id_cust in (select id_cust from customers where id_user = (select id_user from cas_users where user_name='"+
                    opiekun + "')) ";


        // Jeśli wybrany terminal(depot) - tylko dla tego depotu, inaczej - wszystkie
        if (!tfTerminal.getText().equals("")) {
//            subQuery += " and d.pkt_nad_region='" + tfTerminal.getText() + "'";
            subQuery += " and d.pkt_nad_region in (" +
                          YPFunctions.getCommaTextWithApostrof(tfTerminal.getText()) +
                          ") ";
        }

        // Jeśli zaznaczono, że mamy pokazywać tylko przesyłki ze znacznikiem BLP
        if (cbMode.getSelectedIndex() == 1) {
            subQuery += " and d.u_blp='x'";
        } // Jeśli zaznaczono, że mamy pokazywać tylko przesyłki bez znacznika BLP
        else if (cbMode.getSelectedIndex() == 2) {
            subQuery += " and nvl(d.u_blp,' ')<>'x'";
        }
        // Budujemy zapytanie SQL
        String mainQuery = "select  d.no_no as \"Numer LP\"," +
                "d.id_cust as \"Id Klienta\"," +
                "c.id_sap as \"ID_SAP\"," +
                "d.time as \"Data nadania\"," +
                "s.nazwa as \"NAZWA\" " +
                "from data_shipments d," +
                "customers c," +
                "customers_sap s " +
                "where " + subQuery +
                " and c.id_cust=d.id_cust and " +
                " c.id_sap=s.ID_SAP  and d.is_deleted='N' ";
//                           " order by d.time,d.id_cust,d.no_no";
        // Odczytujemy ilość rekordów, które trzeba odczytać
        String s = (String) cbRecCount.getItemAt(cbRecCount.getSelectedIndex());
        if (s.equals("ALL")) {
            // Jeśli w polu "Pokaż rekordów" jest "ALL" - tzeba pokazać wszystkie rekordy
            ShowMainQuery(mainQuery, 0, 999999);
        } else {
            // inaczej rekordy od iStartRecord do iStartRecord+n
            ShowMainQuery(mainQuery, iStartRecord,
                    iStartRecord +
                    Integer.parseInt((String) cbRecCount.getItemAt(cbRecCount.getSelectedIndex())));
        }
    }

private void jbShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbShowActionPerformed
    // Naciśnięty przycisk "Pokaż"
    // Zaczynamy od pierwszego rekordu
    iStartRecord = 0;
    // Wyświetlamy listę przesyłek zgodnie z wybranymi opcjami
    prepareAndShowMainQuery();
}//GEN-LAST:event_jbShowActionPerformed

private void jbNextRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNextRecordsActionPerformed
    // odczytujemy ilość rekordów do przegłądania na jednej stronie
    String s = (String) cbRecCount.getItemAt(cbRecCount.getSelectedIndex());
    // Jeśli wszystkie - wyjście z metody
    if (s.equals("ALL")) {
        return;
    }
    // zwiększamy początkowy rekord do przegłądania o wybraną ilość
    iStartRecord += Integer.parseInt(s);
            // Pokazujemy rekordy klientów CAS
            prepareAndShowMainQuery();
}//GEN-LAST:event_jbNextRecordsActionPerformed

private void jbPrevRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPrevRecordsActionPerformed
    // odczytujemy ilość rekordów do przegłądania na jednej stronie
    String s = (String) cbRecCount.getItemAt(cbRecCount.getSelectedIndex());
    // Jeśli wszystkie - wyjście z metody
    if (s.equals("ALL")) {
        return;
    }

    // zmniejszamy początkowy rekord do przegłądania o wybraną ilość
    int defCount = Integer.parseInt(s);
    if (iStartRecord >= defCount) {
        iStartRecord -= defCount;
    } else {
        iStartRecord = 0;
    }
    // Pokazujemy rekordy klientów CAS
    prepareAndShowMainQuery();
}//GEN-LAST:event_jbPrevRecordsActionPerformed

private void jbShowCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbShowCustomersActionPerformed
    // Naciśnięty przycisk "?" w polu "ID CAS"
    // Proponujemy zaznaczyć klientów do przegłądania
    SelectCustomerDialog frame = new SelectCustomerDialog(null, true, false, tfTerminal.getText().toUpperCase(),"");
    frame.setTitle("Zaznacz ID_CUST klientów, którzycz chcesz obejrzeć");
    frame.setVisible(true);
    // Wyświetlamy Id Cust, które chcemy przeglądać
    tfIdCas.setText(((SelectCustomerDialog) frame).selectedID_CUST);
    tfIdCas.repaint();
}//GEN-LAST:event_jbShowCustomersActionPerformed

private void jbSeekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSeekActionPerformed
    // Naciśnięty przycisk "Szukaj"
    // Odczytujemy treść wyszukiwania
    String seek = tfShipmentSeek.getText().toUpperCase();
    String mainQuery;
    // Jeśli wprowadzony ciąg - numer przesyłki
    if (seek.length() == 11 || seek.length() == 9) {
        mainQuery = "select  d.no_no as \"Numer LP\"," +
                "d.id_cust as \"Id Klienta\"," +
                "c.id_sap as \"ID_SAP\"," +
                "d.time as \"Data nadania\"," +
                "s.nazwa as \"NAZWA\" " +
                "from data_shipments d," +
                "customers c," +
                "customers_sap s " +
                "where d.id_cust=c.id_cust and " +
                "c.id_sap=s.ID_SAP and " +
                "d.no_no='" + seek + "' and d.is_deleted='N'";
    } // inaczej jeśli wprowadzony ciąg - numer paczki
    else if (seek.length() == 24 || seek.length() == 26) {
        mainQuery = "select  d.no_no as \"Numer LP\"," +
                "d.id_cust as \"Id Klienta\"," +
                "c.id_sap as \"ID_SAP\"," +
                "d.time as \"Data nadania\"," +
                "s.nazwa as \"NAZWA\" " +
                "from data_shipments d," +
                "customers c," +
                "customers_sap s " +
                "where d.id_cust=c.id_cust and " +
                "c.id_sap=s.ID_SAP and " +
                "d.no_no = (select p.no_no " +
                "from data_parcels p " +
                "where p.prefix||p.no_parcel='" + seek + "') and d.is_deleted='N'";
    } // Inaczej sygnalizujemy błąd
    else {
        YPFunctions.showErrorMessage("Nie prawidłowy numer listu przewozowego lub paczki");
//        JOptionPane.showMessageDialog(this, "Nie prawidłowy numer listu przewozowego lub paczki", "Błąd", JOptionPane.ERROR_MESSAGE);
        return;
    }
    // wykonujemy zapytanie
            ShowMainQuery(mainQuery, 0, 99999);
    // Wynikiem może być tylko informacja o jednej znalezionej przesyłce
    // lub brak znalezionych przesyłek
    // Jeśli znaleziona przesyłka, to wyświetlamy szczegóły
    if (tableShips.getRowCount() > 0) {
           ShowShipment(YPFunctions.strGet(tableShips,0, 1), YPFunctions.strGet(tableShips,0, 0));
    }

}//GEN-LAST:event_jbSeekActionPerformed

private void tfTerminalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfTerminalMouseClicked
           SelectDepotDialog frame = new SelectDepotDialog(CasAdminApp.getApplication().getMainFrame(), true);
           Point p = tfTerminal.getLocationOnScreen();
           p.x += tfTerminal.getWidth();
           frame.setLocation(p);
           frame.setVisible(true);
           // Wyświetlamy listę depotów, które chcemy przeglądać
           if (((SelectDepotDialog) frame).getReturnStatus() != ((SelectDepotDialog) frame).RET_CANCEL)
           {
              tfTerminal.setText(((SelectDepotDialog) frame).retDepot);
              tfTerminal.repaint();
           }
}//GEN-LAST:event_tfTerminalMouseClicked

private void tfIdCasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIdCasKeyReleased
          if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
               jbShowActionPerformed(null);
}//GEN-LAST:event_tfIdCasKeyReleased

private void btnParcelShopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParcelShopActionPerformed
    String query = "select s.odbiorca_k.oid from data_shipments s where s.id_cust=? and s.no_no=? and s.is_deleted=?";
    Vector pars = new Vector(Arrays.asList(Integer.parseInt(currentIdCas), tfShipmentId.getText(), "N"));
    Vector<String> v = GlobalData.oraSession.selectFirstRecordToVector(query, pars);
    if (!v.isEmpty()) {
        String sap = v.elementAt(0);
        query = "select BORSOFT.DECODEDATA(NAZWA),BORSOFT.DECODEDATA(KOD_P)," +
                "BORSOFT.DECODEDATA(MIASTO),BORSOFT.DECODEDATA(ULICA),BORSOFT.DECODEDATA(NR_DOMU)," +
                "BORSOFT.DECODEDATA(TELEPHONE),BORSOFT.DECODEDATA(SKROTNAZ) " +
                "from SAP.KLSAP@SPS where Id_sap=?";
        pars = new Vector(Arrays.asList(sap));
        v = GlobalData.oraSession.selectFirstRecordToVector(query, pars);
        if (!v.isEmpty()) {
            ClientShowDialog frame = new ClientShowDialog(null,
                                                          true,
                                                          "Dane Parcel Shop",
                                                          sap,
                                                          v.elementAt(0),
                                                          v.elementAt(1),
                                                          v.elementAt(2),
                                                          v.elementAt(3),
                                                          v.elementAt(4),
                                                          v.elementAt(5));
            frame.setVisible(true);
        }
    }
 
}//GEN-LAST:event_btnParcelShopActionPerformed

private void comboReturnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboReturnsActionPerformed
   if (GlobalData.returnsStarted && (comboReturns.getItemCount() > 0))
   {
      String selectedItem = (String)comboReturns.getSelectedItem();
      if (!selectedItem.equals(""))
          YPFunctions.showPanelAsModalDialog(
                new ReturnsPanel(selectedItem),
                "Przegląd danych o zwrotach",
                new Dimension(1017,400));
   }
}//GEN-LAST:event_comboReturnsActionPerformed

private void jbElementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbElementsActionPerformed
/*
    SELECT 
ID, OPER_ID, DHL24_PRZESYLKI_KOLEJKA_ID, 
   PRZESYLKA_NUMER_LP, PRZESYLKA_NUMER_PACZKI, WAGA, 
   WAGA_PRZEL, SZEROKOSC, WYSOKOSC, 
   DLOGOSC, NST, ELEMENT, 
   CDEX_NR, KATEGORIA_EX, KATEGORIA_DR, 
   NUMER_ELEMENTU
FROM CAS_OWNER.DHL24_PRZESYLKI_PACZKI;
*/    
                ElenentsDialog frame = new ElenentsDialog(null, true, tfShipmentId.getText());
                frame.setVisible(true);
}//GEN-LAST:event_jbElementsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DomNad;
    private javax.swing.JTextField DomOdb;
    private javax.swing.JTextField KodPocztNad;
    private javax.swing.JTextField KodPocztOdb;
    private javax.swing.JTextField KrajNad;
    private javax.swing.JTextField KrajOdb;
    private javax.swing.JTextField Lp10kg;
    private javax.swing.JTextField Lp20kg;
    private javax.swing.JTextField Lp31kg;
    private javax.swing.JTextField Lp5kg;
    private javax.swing.JTextField LpDrBezPalet;
    private javax.swing.JTextField LpNiestandDr;
    private javax.swing.JTextField LpNiestandEx;
    private javax.swing.JTextField LpOdleglosc;
    private javax.swing.JTextField LpPal1000;
    private javax.swing.JTextField LpPal200;
    private javax.swing.JTextField LpPal400;
    private javax.swing.JTextField LpPal600;
    private javax.swing.JTextField LpPal800;
    private javax.swing.JTextField LpPk;
    private javax.swing.JTextField LpPlatnik;
    private javax.swing.JTextField LpPobranie;
    private javax.swing.JTextField LpProdukt;
    private javax.swing.JTextField LpSztukDr;
    private javax.swing.JTextField LpUbezp;
    private javax.swing.JTextField LpWagaFiz;
    private javax.swing.JTextField LpWagaPrz;
    private javax.swing.JTextField LpZwrPalet;
    private javax.swing.JTextField MiastoNad;
    private javax.swing.JTextField MiastoOdb;
    private javax.swing.JTextField MpkPozDane;
    private javax.swing.JTextField NazwaDokPozDane;
    private javax.swing.JTextField NazwaNad;
    private javax.swing.JTextField NazwaOdb;
    private javax.swing.JTextField NazwaSkrocOdb;
    private javax.swing.JTextField NotyfEmail;
    private javax.swing.JTextField NotyfSms;
    private javax.swing.JTextField OsKont;
    private javax.swing.JTextField PdfText;
    private javax.swing.JPanel PozDanePanel;
    private javax.swing.JPanel PreaNotPanel;
    private javax.swing.JTextField PreawEmail;
    private javax.swing.JTextField PreawSms;
    private javax.swing.JTextField SapNad;
    private javax.swing.JSplitPane ShipmentSplitPane;
    private javax.swing.JTextField TelNad;
    private javax.swing.JTextField TelOdb;
    private javax.swing.JTextField UlicaNad;
    private javax.swing.JTextField UlicaOdb;
    private javax.swing.JTextField UwagiPozDane;
    private javax.swing.JTextField ZawartPozDane;
    private javax.swing.JButton btnParcelShop;
    private javax.swing.JCheckBox cb1722;
    private javax.swing.JCheckBox cbBLP;
    private javax.swing.JCheckBox cbDostSob;
    private javax.swing.JComboBox cbMode;
    private javax.swing.JCheckBox cbNeighbour;
    private javax.swing.JCheckBox cbOdbSob;
    private javax.swing.JCheckBox cbOdbiorWlasny;
    private javax.swing.JCheckBox cbPDI;
    private javax.swing.JCheckBox cbPackStation;
    private javax.swing.JCheckBox cbParcelShop;
    private javax.swing.JCheckBox cbPotwDor;
    private javax.swing.JComboBox cbRecCount;
    private javax.swing.JCheckBox cbRefNad;
    private javax.swing.JCheckBox cbVIP;
    private javax.swing.JCheckBox cbZwrDok;
    private javax.swing.JTextField codAccount;
    private javax.swing.JComboBox comboOpiekun;
    private javax.swing.JComboBox comboReturns;
    private javax.swing.JPanel daneLpPanel;
    private com.toedter.calendar.JDateChooser dcDoDatyNadania;
    private com.toedter.calendar.JDateChooser dcOdDatyNadania;
    private javax.swing.JPanel downDownLeftPanel;
    private javax.swing.JPanel downDownPanel;
    private javax.swing.JPanel downDownRightPanel;
    private javax.swing.JScrollPane downPanel;
    private javax.swing.JPanel downUpPanel;
    private javax.swing.JPanel innePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JButton jbElements;
    private javax.swing.JButton jbNextRecords;
    private javax.swing.JButton jbPdf;
    private javax.swing.JButton jbPrevRecords;
    private javax.swing.JButton jbSeek;
    private javax.swing.JButton jbShow;
    private javax.swing.JButton jbShowCustomers;
    private javax.swing.JPanel kwotyPanel;
    private javax.swing.JLabel labelPDI;
    private javax.swing.JLabel labelVIP;
    private javax.swing.JLabel lblReturns;
    private javax.swing.JPanel nadawcaPanel;
    private javax.swing.JPanel odbiorcaPanel;
    private javax.swing.JScrollPane panelAllShipments;
    private javax.swing.JTextField refPobraniaPozDane;
    private javax.swing.JTable tableParcels;
    private javax.swing.JTable tableRefNad;
    private javax.swing.JTable tableShips;
    private javax.swing.JTable tableTnTROD;
    private javax.swing.JTextField tfBC;
    private javax.swing.JTextField tfDataNadania;
    private javax.swing.JTextField tfDelivDays;
    private javax.swing.JTextField tfIdCas;
    private javax.swing.JTextField tfInsertt;
    private javax.swing.JTextField tfKurier;
    private javax.swing.JTextField tfOplBrutto;
    private javax.swing.JTextField tfOplCOD;
    private javax.swing.JTextField tfOplNetto;
    private javax.swing.JTextField tfOplNstDr;
    private javax.swing.JTextField tfOplNstEx;
    private javax.swing.JTextField tfOplPDI;
    private javax.swing.JTextField tfOplPDR;
    private javax.swing.JTextField tfOplPEX;
    private javax.swing.JTextField tfOplPOD;
    private javax.swing.JTextField tfOplROD;
    private javax.swing.JTextField tfOplTerm;
    private javax.swing.JTextField tfOplUBE;
    private javax.swing.JTextField tfOplVIP;
    private javax.swing.JTextField tfShipmentId;
    private javax.swing.JTextField tfShipmentSeek;
    private javax.swing.JTextField tfSource;
    private javax.swing.JTextField tfTerminal;
    private javax.swing.JTextField tfTerminalNadawcy;
    private javax.swing.JTextField tfTerminalOdbiorcy;
    private javax.swing.JPanel upPanel;
    private javax.swing.JPanel uslugiPanel;
    // End of variables declaration//GEN-END:variables
    private int iStartRecord;
}
