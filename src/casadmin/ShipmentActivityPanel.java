/*
 * ShipmentActivityPanel.java
 *
 * Created on 31 październik 2008, 09:48
 */
package casadmin;

import java.awt.Dimension;
import java.awt.Point;
import java.util.*;

public class ShipmentActivityPanel extends javax.swing.JPanel {

    /** Creates new form ShipmentActivityPanel */
    public ShipmentActivityPanel() {
        initComponents();
        // iStartRecord - numer rekordu od którego zaczyna się przeglądanie listy
        // użytkowników. Jest dla tego, że istnieje możliwość przeglądania danych
        // częściami (po 50, 100 czy inną ilość na stronie).
        iStartRecord = 0;
        Date d = new Date();
        dcOdDatyNadania.setDate(d);
        dcDoDatyNadania.setDate(d);
        fillComboOpiekun();

    }

    private void fillComboOpiekun() {
        if (GlobalData.v_allUsers.isEmpty())
                 GlobalData.v_allUsers =
                        GlobalData.oraSession.selectOneColumnToVector(
                        "Select user_name from cas_users where active='T' order by user_name",
                        null);

        comboOpiekun.removeAllItems();
        comboOpiekun.addItem("*.*");
        Iterator it = GlobalData.v_allUsers.iterator();
        while (it.hasNext())
               comboOpiekun.addItem((String) it.next());
        comboOpiekun.setSelectedItem("*.*");
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        upPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dcOdDatyNadania = new com.toedter.calendar.JDateChooser();
        jLabel66 = new javax.swing.JLabel();
        tfIdCas = new javax.swing.JTextField();
        jbShowCustomers = new javax.swing.JButton();
        jLabel67 = new javax.swing.JLabel();
        tfTerminal = new javax.swing.JTextField();
        jbShow = new javax.swing.JButton();
        jbPrevRecords = new javax.swing.JButton();
        jbNextRecords = new javax.swing.JButton();
        cbRecCount = new javax.swing.JComboBox();
        jLabel71 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dcDoDatyNadania = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        comboOpiekun = new javax.swing.JComboBox();
        cbTotalDetail = new javax.swing.JCheckBox();
        jbSelectChecked = new javax.swing.JButton();
        downPanel = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();

        setName("Form"); // NOI18N
        setLayout(new java.awt.GridLayout(1, 0));

        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(casadmin.CasAdminApp.class).getContext().getResourceMap(ShipmentActivityPanel.class);
        upPanel.setBackground(resourceMap.getColor("upPanel.background")); // NOI18N
        upPanel.setName("upPanel"); // NOI18N
        upPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 20));

        dcOdDatyNadania.setDateFormatString(resourceMap.getString("dcOdDatyNadania.dateFormatString")); // NOI18N
        dcOdDatyNadania.setName("dcOdDatyNadania"); // NOI18N
        jPanel2.add(dcOdDatyNadania, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 100, 20));

        jLabel66.setText(resourceMap.getString("jLabel66.text")); // NOI18N
        jLabel66.setName("jLabel66"); // NOI18N
        jPanel2.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 60, 20));

        tfIdCas.setName("tfIdCas"); // NOI18N
        tfIdCas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfIdCasKeyReleased(evt);
            }
        });
        jPanel2.add(tfIdCas, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 80, 20));

        jbShowCustomers.setText(resourceMap.getString("jbShowCustomers.text")); // NOI18N
        jbShowCustomers.setName("jbShowCustomers"); // NOI18N
        jbShowCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbShowCustomersActionPerformed(evt);
            }
        });
        jPanel2.add(jbShowCustomers, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 40, -1));

        jLabel67.setText(resourceMap.getString("jLabel67.text")); // NOI18N
        jLabel67.setName("jLabel67"); // NOI18N
        jPanel2.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, 30));

        tfTerminal.setName("tfTerminal"); // NOI18N
        tfTerminal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfTerminalMouseClicked(evt);
            }
        });
        jPanel2.add(tfTerminal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 80, -1));

        jbShow.setText(resourceMap.getString("jbShow.text")); // NOI18N
        jbShow.setName("jbShow"); // NOI18N
        jbShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbShowActionPerformed(evt);
            }
        });
        jPanel2.add(jbShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 40, 150, 30));

        jbPrevRecords.setText(resourceMap.getString("jbPrevRecords.text")); // NOI18N
        jbPrevRecords.setName("jbPrevRecords"); // NOI18N
        jbPrevRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPrevRecordsActionPerformed(evt);
            }
        });
        jPanel2.add(jbPrevRecords, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, -1, -1));

        jbNextRecords.setText(resourceMap.getString("jbNextRecords.text")); // NOI18N
        jbNextRecords.setName("jbNextRecords"); // NOI18N
        jbNextRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNextRecordsActionPerformed(evt);
            }
        });
        jPanel2.add(jbNextRecords, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, 40, -1));

        cbRecCount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "50", "100", "250", "500", "ALL" }));
        cbRecCount.setName("cbRecCount"); // NOI18N
        jPanel2.add(cbRecCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 50, -1));

        jLabel71.setText(resourceMap.getString("jLabel71.text")); // NOI18N
        jLabel71.setName("jLabel71"); // NOI18N
        jPanel2.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 50, 20));

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 20));

        dcDoDatyNadania.setDateFormatString(resourceMap.getString("dcDoDatyNadania.dateFormatString")); // NOI18N
        dcDoDatyNadania.setName("dcDoDatyNadania"); // NOI18N
        jPanel2.add(dcDoDatyNadania, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 100, 20));

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        comboOpiekun.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboOpiekun.setName("comboOpiekun"); // NOI18N
        jPanel2.add(comboOpiekun, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 150, -1));

        cbTotalDetail.setBackground(resourceMap.getColor("cbTotalDetail.background")); // NOI18N
        cbTotalDetail.setText(resourceMap.getString("cbTotalDetail.text")); // NOI18N
        cbTotalDetail.setName("cbTotalDetail"); // NOI18N
        cbTotalDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTotalDetailActionPerformed(evt);
            }
        });
        jPanel2.add(cbTotalDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, 30));

        upPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 790, 80));

        jbSelectChecked.setText(resourceMap.getString("jbSelectChecked.text")); // NOI18N
        jbSelectChecked.setName("jbSelectChecked"); // NOI18N
        jbSelectChecked.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSelectCheckedActionPerformed(evt);
            }
        });
        upPanel.add(jbSelectChecked, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 60, 130, 30));

        jSplitPane1.setTopComponent(upPanel);

        downPanel.setBackground(resourceMap.getColor("downPanel.background")); // NOI18N
        downPanel.setAutoscrolls(true);
        downPanel.setName("downPanel"); // NOI18N

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableData.setName("tableData"); // NOI18N
        tableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDataMouseClicked(evt);
            }
        });
        downPanel.setViewportView(tableData);

        jSplitPane1.setRightComponent(downPanel);

        add(jSplitPane1);
    }// </editor-fold>//GEN-END:initComponents

    private void ShowMainQuery(String p_query, int p_start, int p_end) {
        // Wyświetlamy tablicę
        YPFunctions.FillTableFromOra(p_query,
                                     null,
                                     p_start,
                                     p_end,
                                     tableData,
                                     new Vector(Arrays.asList(20, 40, 40, 40, 80, 200, 50, 50, 50, 20)),
                                     new Vector(),
                                     true,  // z kolumną checkbox'ów jako pierwsza
                                     true,
                                     new Vector(Arrays.asList(0)),
                                     null,
                                     true);
    }

    private void prepareAndShowMainQuery() {
        // Przygotowujemy warunek dla zapytania SQL
        String subQuery = " and d.time between to_date('" +
                          YPFunctions.DateToString(dcOdDatyNadania.getDate()) +
                          " 00:00:00','yyyy/mm/dd hh24:mi:ss')" +
                          " and to_date('" +
                          YPFunctions.DateToString(dcDoDatyNadania.getDate()) +
                          " 23:59:59','yyyy/mm/dd hh24:mi:ss')";

        String sCasSap = tfIdCas.getText();
        // Jeśli wybrane ID CUST lub ID SAP
        if (! sCasSap.equals("")) {
            String firstToken = YPFunctions.getTokenAt(0, sCasSap, ",", "");
            if (firstToken.length()==7)
                subQuery += " and d.id_cust in (select id_cust from customers where id_sap in (" +
                              tfIdCas.getText() + "))";
            else
                subQuery += " and d.id_cust in (" + tfIdCas.getText() + ")";
        }

        String opiekun = (String)comboOpiekun.getSelectedItem();
        if ( ! opiekun.equals("*.*"))
            subQuery += " and d.id_cust in (select id_cust from customers where id_user = (select id_user from cas_users where user_name='"+
                    opiekun + "')) ";


        // Jeśli wybrany terminal(depot) - tylko dla tego depotu, inaczej - wszystkie
        if (!tfTerminal.getText().equals("")) {
            subQuery += " and d.depot in (" +
                          YPFunctions.getCommaTextWithApostrof(tfTerminal.getText()) +
                          ") ";
        }
        // Budujemy zapytanie SQL
        String mainQuery;
        if (cbTotalDetail.isSelected()) {
              mainQuery = "select  '" +
                     YPFunctions.DateToString(dcOdDatyNadania.getDate()) + " - " + 
                     YPFunctions.DateToString(dcDoDatyNadania.getDate()) + "' as \"Data nadania\"," +
                                   "d.id_cust as \"Id Klienta\"," +
                                   "max(s.id_sap) as \"ID_SAP\"," +
                                   "max(s.skrotnaz) as \"Skrot\"," +
                                   "max(s.nazwa) as \"NAZWA\"," +
                                   "max(d.depot) as \"Terminal\"," +
                                   "sum(d.shipment) as \"Przesylek\"," +
                                   "sum(d.parcel) as \"Paczek\" " +
                           "from data_ship_count d," +
                                 "customers_sap s " +
                           "where d.id_sap=s.ID_SAP " +
                                  subQuery +
                           " group by d.id_cust " +
                           " order by d.id_cust";
        } else {
              mainQuery = "select  d.time as \"Data nadania\"," +
                                   "d.id_cust as \"Id Klienta\"," +
                                   "s.id_sap as \"ID_SAP\"," +
                                   "s.skrotnaz as \"Skrot\"," +
                                   "s.nazwa as \"NAZWA\"," +
                                   "d.depot as \"Terminal\"," +
                                   "d.shipment as \"Przesylek\"," +
                                   "d.parcel as \"Paczek\" " +
                           "from data_ship_count d," +
                                 "customers_sap s " +
                           "where d.id_sap=s.ID_SAP " +
                                  subQuery +
                           " order by d.time,d.id_cust";
        }
        // Odczytujemy ilość rekordów, które trzeba odczytać
        String s = (String) cbRecCount.getItemAt(cbRecCount.getSelectedIndex());
        if (s.equals("ALL")) {
            // Jeśli w polu "Pokaż rekordów" jest "ALL" - tzeba pokazać wszystkie rekordy
            ShowMainQuery(mainQuery, 0, 999999);
        } else {
            // inaczej rekordy od iStartRecord do iStartRecord+n
            int iEndRecord = iStartRecord +
                    Integer.parseInt((String) cbRecCount.getItemAt(cbRecCount.getSelectedIndex()));
            ShowMainQuery(mainQuery, iStartRecord, iEndRecord);
        }
    }

    private void jbShowCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbShowCustomersActionPerformed
        // Naciśnięty przycisk "?" w polu "ID CAS"
        // Proponujemy zaznaczyć klientów do przegłądania
        SelectCustomerDialog frame = new SelectCustomerDialog(null, true, false, tfTerminal.getText().toUpperCase(),"");
        frame.setTitle("Zaznacz ID_CUST klientów, którzycz chcesz obejrzeć");
        frame.setVisible(true);
        // Wyświetlamy Id Cust, które chcemy przeglądać
        tfIdCas.setText(((SelectCustomerDialog)frame).selectedID_CUST);
        tfIdCas.repaint();

}//GEN-LAST:event_jbShowCustomersActionPerformed

    private void jbShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbShowActionPerformed
        // Naciśnięty przycisk "Pokaż"
        // Zaczynamy od pierwszego rekordu
        iStartRecord = 0;
        // Wyświetlamy zawartość tablicy zgodnie z wybranymi opcjami
        prepareAndShowMainQuery();
}//GEN-LAST:event_jbShowActionPerformed

    private void jbPrevRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPrevRecordsActionPerformed
        // odczytujemy ilość rekordów do przegłądania na jednej stronie
        String s = (String) cbRecCount.getItemAt(cbRecCount.getSelectedIndex());
        // Jeśli wszystkie - wyjście z metody
        if (s.equals("ALL")) {
            return;
        }

        // zmniejszamy początkowy rekord do przegłądania o wybraną ilość
        int defCount = Integer.parseInt(s);
        if (iStartRecord >= defCount) {
            iStartRecord -= defCount;
        } else {
            iStartRecord = 0;
        }
        // Pokazujemy rekordy klientów CAS
        prepareAndShowMainQuery();
}//GEN-LAST:event_jbPrevRecordsActionPerformed

    private void jbNextRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNextRecordsActionPerformed
        // odczytujemy ilość rekordów do przegłądania na jednej stronie
        String s = (String) cbRecCount.getItemAt(cbRecCount.getSelectedIndex());
        // Jeśli wszystkie - wyjście z metody
        if (s.equals("ALL")) {
            return;
        }
        // zwiększamy początkowy rekord do przegłądania o wybraną ilość
        iStartRecord += Integer.parseInt(s);
        // Pokazujemy rekordy klientów CAS
        prepareAndShowMainQuery();
}//GEN-LAST:event_jbNextRecordsActionPerformed

    private void jbSelectCheckedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelectCheckedActionPerformed
        // Naciśnięty przycisk "Wybierz zaznaczone"

        String sIds = "";
        // Zapisujemy do ciągu sIds wybrane ID CUST, rozdzielone znakiem ","
        for (int i = 0; i < tableData.getModel().getRowCount(); i++) {
            // Pamiętamy że pierwsza kolumna - to kolumna checkbox'ów,
            // a ID CUST - w trzeciej kolumnie
            if ((Boolean) tableData.getValueAt(i, 0)) {
                sIds += YPFunctions.strGet(tableData,i, 2) + ",";
            }
        }
        if (sIds.length() > 0) {
            // usuwamy ostatni symboł ","
            sIds = sIds.substring(0, sIds.length() - 1);
        }
        else
        {
            YPFunctions.showErrorMessage("Nie zaznaczone żadne pozycję");
//            JOptionPane.showMessageDialog(null, "Nie zaznaczone żadne pozycję","Błąd", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Pokazyjemy panel przeglądu przesyłek
        YPFunctions.showPanelAsModalDialog(new ShipmentsPanel(dcOdDatyNadania.getDate(), dcDoDatyNadania.getDate(), sIds, tfTerminal.getText()),
                "Przegląd informacji o przesyłkach",
                new Dimension(1017,700));
}//GEN-LAST:event_jbSelectCheckedActionPerformed

    private void tableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDataMouseClicked
    if (evt.getClickCount() == 2)
        YPFunctions.showPanelAsModalDialog(
                new ShipmentsPanel(
                       dcOdDatyNadania.getDate(),
                       dcDoDatyNadania.getDate(),
                       YPFunctions.strGet(tableData,tableData.getSelectedRow(), 2),
                        tfTerminal.getText()),
                "Przegląd informacji o przesyłkach",
                new Dimension(1017,700));
    }//GEN-LAST:event_tableDataMouseClicked

    private void tfTerminalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfTerminalMouseClicked
           SelectDepotDialog frame = new SelectDepotDialog(CasAdminApp.getApplication().getMainFrame(), true);
           Point p = tfTerminal.getLocationOnScreen();
           p.x += tfTerminal.getWidth();
           frame.setLocation(p);
           frame.setVisible(true);
           // Wyświetlamy listę depotów, które chcemy przeglądać
           if (((SelectDepotDialog) frame).getReturnStatus() != ((SelectDepotDialog) frame).RET_CANCEL)
           {
              tfTerminal.setText(((SelectDepotDialog) frame).retDepot);
              tfTerminal.repaint();
           }
    }//GEN-LAST:event_tfTerminalMouseClicked

    private void cbTotalDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTotalDetailActionPerformed
        // Zmiania się tryb pokazywania raportu
        // Zaczynamy od pierwszego rekordu
        iStartRecord = 0;
    }//GEN-LAST:event_cbTotalDetailActionPerformed

    private void tfIdCasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIdCasKeyReleased
           if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
               jbShowActionPerformed(null);
    }//GEN-LAST:event_tfIdCasKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbRecCount;
    private javax.swing.JCheckBox cbTotalDetail;
    private javax.swing.JComboBox comboOpiekun;
    private com.toedter.calendar.JDateChooser dcDoDatyNadania;
    private com.toedter.calendar.JDateChooser dcOdDatyNadania;
    private javax.swing.JScrollPane downPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton jbNextRecords;
    private javax.swing.JButton jbPrevRecords;
    private javax.swing.JButton jbSelectChecked;
    private javax.swing.JButton jbShow;
    private javax.swing.JButton jbShowCustomers;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField tfIdCas;
    private javax.swing.JTextField tfTerminal;
    private javax.swing.JPanel upPanel;
    // End of variables declaration//GEN-END:variables
    private int iStartRecord;
}
