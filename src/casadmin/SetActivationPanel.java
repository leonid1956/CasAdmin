package casadmin;

import java.awt.Point;
import java.util.*;


public class SetActivationPanel extends javax.swing.JPanel {

    public SetActivationPanel() {
        initComponents();
        tfTerminal.setText("");
        tfIdCas.setText("");
        bChangeLink = false;
        comboHttpMode.setEnabled(bChangeLink);
        fillScreen();
        fillComboOpiekun();
    }

        private void fillComboOpiekun() {
        if (GlobalData.v_allUsers.isEmpty())
                 GlobalData.v_allUsers =
                        GlobalData.oraSession.selectOneColumnToVector(
                        "Select user_name from cas_users where active='T' order by user_name",
                        null);

        comboOpiekun.removeAllItems();
        comboOpiekun.addItem("*.*");
        Iterator it = GlobalData.v_allUsers.iterator();
        while (it.hasNext())
               comboOpiekun.addItem((String) it.next());
        comboOpiekun.setSelectedItem(GlobalData.m_sUserLogin);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        upPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        tfIdCas = new javax.swing.JTextField();
        jbShowCustomers = new javax.swing.JButton();
        tfTerminal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboOpiekun = new javax.swing.JComboBox();
        downPanel = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        activityTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        comboHttpMode = new javax.swing.JComboBox();
        cbChangeLink = new javax.swing.JCheckBox();
        jbSaveActivation = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setName("Form"); // NOI18N
        setLayout(new java.awt.GridLayout(1, 0));

        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(casadmin.CasAdminApp.class).getContext().getResourceMap(SetActivationPanel.class);
        upPanel.setBackground(resourceMap.getColor("upPanel.background")); // NOI18N
        upPanel.setName("upPanel"); // NOI18N
        upPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tfIdCas.setName("tfIdCas"); // NOI18N
        jPanel2.add(tfIdCas, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 110, 20));

        jbShowCustomers.setText(resourceMap.getString("jbShowCustomers.text")); // NOI18N
        jbShowCustomers.setName("jbShowCustomers"); // NOI18N
        jbShowCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbShowCustomersActionPerformed(evt);
            }
        });
        jPanel2.add(jbShowCustomers, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 40, -1));

        tfTerminal.setName("tfTerminal"); // NOI18N
        tfTerminal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfTerminalMouseClicked(evt);
            }
        });
        jPanel2.add(tfTerminal, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 150, -1));

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        comboOpiekun.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboOpiekun.setName("comboOpiekun"); // NOI18N
        jPanel2.add(comboOpiekun, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 150, -1));

        upPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 780, 80));

        jSplitPane1.setTopComponent(upPanel);

        downPanel.setBackground(resourceMap.getColor("downPanel.background")); // NOI18N
        downPanel.setName("downPanel"); // NOI18N
        downPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane10.setName("jScrollPane10"); // NOI18N

        activityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        activityTable.setName("activityTable"); // NOI18N
        jScrollPane10.setViewportView(activityTable);

        downPanel.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 400, 290));

        jPanel6.setBackground(resourceMap.getColor("jPanel6.background")); // NOI18N
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Sposób połączenia do serwera CAS"));
        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comboHttpMode.setName("comboHttpMode"); // NOI18N
        jPanel6.add(comboHttpMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 380, -1));

        cbChangeLink.setBackground(resourceMap.getColor("cbChangeLink.background")); // NOI18N
        cbChangeLink.setText(resourceMap.getString("cbChangeLink.text")); // NOI18N
        cbChangeLink.setName("cbChangeLink"); // NOI18N
        cbChangeLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbChangeLinkActionPerformed(evt);
            }
        });
        jPanel6.add(cbChangeLink, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        downPanel.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 400, 80));

        jbSaveActivation.setText(resourceMap.getString("jbSaveActivation.text")); // NOI18N
        jbSaveActivation.setName("jbSaveActivation"); // NOI18N
        jbSaveActivation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveActivationActionPerformed(evt);
            }
        });
        downPanel.add(jbSaveActivation, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 410, 160, 30));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setFont(resourceMap.getFont("jTextArea2.font")); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText(resourceMap.getString("jTextArea2.text")); // NOI18N
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setName("jTextArea2"); // NOI18N
        jScrollPane1.setViewportView(jTextArea2);

        downPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 370, 290));

        jSplitPane1.setRightComponent(downPanel);

        add(jSplitPane1);
    }// </editor-fold>//GEN-END:initComponents


    private void fillScreen()
    {
            Vector pars = new Vector();
            String queryActivation = "SELECT" +
                    " 'N' as \"Aktywny\"" +
                    ",'N' as \"Polaczenie typu On-line\"" +
                    ",'N' as \"Klient testowy\"" +
                    ",'N' as \"Skanowanie HH lub PDT\"" +
                    ",'N' as \"Zablokowany\"" +
                    ",'N' as \"Listy BLP\"" +
                    ",'N' as \"Usluga T&T ROD\"" +
                    ",'N' as \"Stop migracja Oracle\"" +
                    ",'N' as \"Nadanie do Service Point\"" +
                    ",'N' as \"Wydruk PDF na BLP\"" +
                    ",'N' as \"DR24\"" +

                    ",'N' as \"Kilka nadawców (Multi_SAP)\"" +
                    ",'N' as \"Wymuszanie wpisywania telefonu\"" +
                    ",'N' as \"Doręczenie monitorowane(VIP)\"" +
                    ",'N' as \"Doręczenie do sąsiada(SAS)\"" +
                    ",'N' as \"Obsługa CIM/Mobile\"" +
                    ",'N' as \"Wymuszanie telefonu odbiorcy\"" +
                    ",'N' as \"Wymuszanie Email odbiorcy\"" +

                    " from v_customers where id_cust=1001";

            // Odczytujeny pierwszy rekord
            Vector<Vector> v_tableTemp =
                    GlobalData.oraSession.selectFirstRecordVertically(queryActivation, pars, true);
            // Wstawiamy kolumnę czeckbox'ów dla zaznaczenia zmiany aktywacji tylko niektórych pozycji
            Vector<Vector> v_tableBody = new Vector();
            Iterator it = v_tableTemp.iterator();
            while(it.hasNext())
            {
                  Vector line = (Vector)it.next();
                  line.add(0, Boolean.valueOf(false));
                  v_tableBody.add(line);
            }

            // Wyznaczamy nagłówki kolumn tablicy
            Vector<String> v_tableTitles = new Vector(Arrays.asList("Pole do zmiany","Opcja", "Zawartość"));
            // Pozwalamy na edycję drugiej kolumny
            Vector<Integer> v_tableEditEnable = new Vector(Arrays.asList(0,2));
            // Wyświetlamy tablicę
            activityTable.setModel(new YPTableModel(v_tableBody, v_tableTitles, v_tableEditEnable));
            // "Przzyciemniamy" pierwszą kolumnę
            activityTable.getColumnModel().getColumn(1).setCellRenderer(
                    new YPTableCellRenderer(1, activityTable.getTableHeader().getBackground()));
            // Ustawiamy szerokości kolumn
            activityTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            activityTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            activityTable.getColumnModel().getColumn(2).setPreferredWidth(30);

            Vector<Vector<String> > v =
                    GlobalData.oraSession.selectAllRecordsToVector(
                      "Select descr || ' ' || addr from cas_dict_web order by id",
                      null);
            comboHttpMode.removeAllItems();
            it = v.iterator();
            while (it.hasNext()) {
                Vector<String> vTemp = (Vector<String>) it.next();
                comboHttpMode.addItem(vTemp.elementAt(0));
            }
            if (!v.isEmpty())
               comboHttpMode.setSelectedIndex(0);
    }


    private void jbShowCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbShowCustomersActionPerformed
        // Naciśnięty przycisk "?" w polu "ID CAS"
        // Proponujemy zaznaczyć klientów do przegłądania
       String forTerminal = tfTerminal.getText().toUpperCase();
        String forOpiekun = (String)comboOpiekun.getSelectedItem();
        if (forOpiekun.equals("*.*"))
            forOpiekun = "";
        if (!(forTerminal+forOpiekun).equals(""))
        {
            SelectCustomerDialog frame = new SelectCustomerDialog(
                      null,
                      true,
                      false,
                      forTerminal,
                      forOpiekun);
            frame.setTitle("Zaznacz ID_CUST klientów, którzycz chcesz obejrzeć");
            frame.setVisible(true);
           // Wyświetlamy Id Cust, które chcemy przeglądać
           tfIdCas.setText(((SelectCustomerDialog)frame).selectedID_CUST);
           tfIdCas.repaint();
        }
    }//GEN-LAST:event_jbShowCustomersActionPerformed

    private void jbSaveActivationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveActivationActionPerformed
        // Nacisnięty przycisk "Zapisz aktywację"
        Boolean b = this.cbChangeLink.isSelected();
        for (int i = 0; i < activityTable.getRowCount(); i++)
            b = b || (Boolean) activityTable.getValueAt(i, 0);

        if (!b){
             YPFunctions.showErrorMessage("Nie zaznaczona żadna opcja");
             return;
        }

        String where = "";
        String terminals = tfTerminal.getText().toUpperCase();
        String idCass = tfIdCas.getText().toUpperCase();
        String opiekun = (String)comboOpiekun.getSelectedItem();

        if (idCass.equals("") && terminals.equals("") && opiekun.equals("*.*"))
        {
                  if (javax.swing.JOptionPane.YES_OPTION != YPFunctions.showQuestionMessage(
                      "<html>Czy naprawdę chcesz ustawić zaznaczone opcję aktywacji dla <b>WSZYSTKICH</b> klientów ?",
                      "Ustawienie aktywacji"))
                             return;
        }
        if (!idCass.equals(""))
            where = "id_cust in (" + idCass + ")";
        else if (!terminals.equals(""))
            where = "id_cust in (select id_cust from customers where depot in (" +
                    YPFunctions.getCommaTextWithApostrof(terminals) + "))";
        else if (!opiekun.equals("*.*"))
            where = "id_cust in (select id_cust from customers where id_user = (select id_user from cas_users where user_name='"+
                    opiekun + "')) ";
        else
            where = "1=1";
        this.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.WAIT_CURSOR));
        String[] fields = {"active_cust","type_online","type_test","use_scan",
                           "type_block","type_blp","type_rod","stop_ora",
                           "type_serv_point","type_pdf","dr24","multi_sap",
                           "fill_phone","vip","type_neighbour", "cim_mobile",
                           "must_phone","must_email",
                           "type_comm"};

        String queryActivation = "Update customers set ";
        for (int i = 0; i < activityTable.getRowCount(); i++)
        {
            if ((Boolean)activityTable.getValueAt(i, 0))
                queryActivation += fields[i] +
                                   "='" +
                                   YPFunctions.bool2str((Boolean)activityTable.getValueAt(i, 2)) +
                                   "',";
        }
        if (cbChangeLink.isSelected())
        {
                queryActivation += fields[fields.length - 1] +
                                   "=" +
                                   Integer.toString(comboHttpMode.getSelectedIndex() + 1) +
                                   ",";
        }
        queryActivation = queryActivation.substring(0, queryActivation.length() - 1) + " where " + where;

        boolean bRet = GlobalData.oraSession.executeQuery(queryActivation,new Vector());
        
        // !!! Przy zaznaczeniu aktywacji PDI_VIP trzeba zaznaczyć do synchronizacji tabele DICT_EX i DICT_EX_STD
        if ((Boolean)activityTable.getValueAt(13, 2))
        {
            String querySynchronization = "update cas_synchro set check_synchro='T' where " + where + " and ID_DICT in ('DICT_EX', 'DICT_EX_STD')";
            Vector pars = new Vector();
            GlobalData.oraSession.executeQuery(querySynchronization,pars);
        }

        this.setCursor(java.awt.Cursor.getDefaultCursor());
        if (bRet)
        {
            GlobalData.oraSession.SaveLog("Zmiana danych aktywacji" ,where);
            YPFunctions.showMessage("Dane aktywacji zostały zapisane poprawnie","");
        
        } else
           YPFunctions.showErrorMessage("Nie udało się wykonać zapytania SQL. Dane nie zostały zapisane");
//           JOptionPane.showMessageDialog(null, "Nie udało się wykonać zapytania SQL. Dane nie zostały zapisane", "Błąd", JOptionPane.ERROR_MESSAGE);
}//GEN-LAST:event_jbSaveActivationActionPerformed

    private void cbChangeLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbChangeLinkActionPerformed
        bChangeLink = ! bChangeLink;
        comboHttpMode.setEnabled(bChangeLink);
    }//GEN-LAST:event_cbChangeLinkActionPerformed

    private void tfTerminalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfTerminalMouseClicked
        if (tfTerminal.isEnabled())
        {
           SelectDepotDialog frame = new SelectDepotDialog(CasAdminApp.getApplication().getMainFrame(), true);
           Point p = tfTerminal.getLocationOnScreen();
           p.x += tfTerminal.getWidth();
           frame.setLocation(p);
           frame.setVisible(true);
           // Wyświetlamy listę depotów, które chcemy przeglądać
           if (((SelectDepotDialog) frame).getReturnStatus() != ((SelectDepotDialog) frame).RET_CANCEL)
           {
              tfTerminal.setText(((SelectDepotDialog) frame).retDepot);
              tfTerminal.repaint();
           }
        }
    }//GEN-LAST:event_tfTerminalMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activityTable;
    private javax.swing.JCheckBox cbChangeLink;
    private javax.swing.JComboBox comboHttpMode;
    private javax.swing.JComboBox comboOpiekun;
    private javax.swing.JPanel downPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton jbSaveActivation;
    private javax.swing.JButton jbShowCustomers;
    private javax.swing.JTextField tfIdCas;
    private javax.swing.JTextField tfTerminal;
    private javax.swing.JPanel upPanel;
    // End of variables declaration//GEN-END:variables
    private boolean bChangeLink;
}
