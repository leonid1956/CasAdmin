package casadmin;

import java.util.*;

public class OptionsDrDialog extends javax.swing.JDialog {

    public OptionsDrDialog(java.awt.Frame parent,
                                boolean modal, int p_idCas, String p_product, String p_platnik) {
        super(parent, modal);
        initComponents();
        YPFunctions.CenterScreen(this);
        idCas = p_idCas;
        product = p_product;
        platnik = p_platnik;
        bCheckExist = false;
        bCheckStand = false;
        bCheckFormula = false;
        refreshData();
    }

    private void refreshData() {
        YPFunctions.enableContainer(panelImportExistings, bCheckExist);
        YPFunctions.enableContainer(panelImportStandard, bCheckStand);
        YPFunctions.enableContainer(panelFormula, bCheckFormula);
        checkImportExistings.setEnabled(true);
        checkImportStandard.setEnabled(true);
        checkUseFormula.setEnabled(true);
        checkImportExistings.setSelected(bCheckExist);
        checkImportStandard.setSelected(bCheckStand);
        checkUseFormula.setSelected(bCheckFormula);
    }





    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelFormula = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        tfWagaOd = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        tfWagaDo = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        tfOdlOd = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        tfOdlDo = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        tfFormula = new javax.swing.JTextField();
        jbUseFormula = new javax.swing.JButton();
        checkUseFormula = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        panelImportExistings = new javax.swing.JPanel();
        checkImportExistings = new javax.swing.JCheckBox();
        jbImportExisting = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfIdCas = new javax.swing.JTextField();
        jbGetIdCas = new javax.swing.JButton();
        checkForExistings = new javax.swing.JCheckBox();
        panelImportStandard = new javax.swing.JPanel();
        checkImportStandard = new javax.swing.JCheckBox();
        jbImportStandard = new javax.swing.JButton();
        checkForStandard = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(casadmin.CasAdminApp.class).getContext().getResourceMap(OptionsDrDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFormula.setBackground(resourceMap.getColor("panelFormula.background")); // NOI18N
        panelFormula.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("panelFormula.border.title"))); // NOI18N
        panelFormula.setName("panelFormula"); // NOI18N
        panelFormula.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane3.setBorder(null);
        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTextArea1.setBackground(resourceMap.getColor("jTextArea1.background")); // NOI18N
        jTextArea1.setColumns(20);
        jTextArea1.setFont(resourceMap.getFont("jTextArea1.font")); // NOI18N
        jTextArea1.setForeground(resourceMap.getColor("jTextArea1.foreground")); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText(resourceMap.getString("jTextArea1.text")); // NOI18N
        jTextArea1.setBorder(new javax.swing.border.MatteBorder(null));
        jTextArea1.setName("jTextArea1"); // NOI18N
        jScrollPane3.setViewportView(jTextArea1);

        panelFormula.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 270, 150));

        jLabel24.setText(resourceMap.getString("jLabel24.text")); // NOI18N
        jLabel24.setName("jLabel24"); // NOI18N
        panelFormula.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 50, -1));

        tfWagaOd.setName("tfWagaOd"); // NOI18N
        panelFormula.add(tfWagaOd, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 60, -1));

        jLabel25.setText(resourceMap.getString("jLabel25.text")); // NOI18N
        jLabel25.setName("jLabel25"); // NOI18N
        panelFormula.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, -1, -1));

        tfWagaDo.setName("tfWagaDo"); // NOI18N
        panelFormula.add(tfWagaDo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 60, -1));

        jLabel26.setText(resourceMap.getString("jLabel26.text")); // NOI18N
        jLabel26.setName("jLabel26"); // NOI18N
        panelFormula.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, -1));

        tfOdlOd.setName("tfOdlOd"); // NOI18N
        panelFormula.add(tfOdlOd, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 60, -1));

        jLabel27.setText(resourceMap.getString("jLabel27.text")); // NOI18N
        jLabel27.setName("jLabel27"); // NOI18N
        panelFormula.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, -1, -1));

        tfOdlDo.setName("tfOdlDo"); // NOI18N
        panelFormula.add(tfOdlDo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 80, 60, -1));

        jLabel28.setText(resourceMap.getString("jLabel28.text")); // NOI18N
        jLabel28.setName("jLabel28"); // NOI18N
        panelFormula.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, -1, -1));

        tfFormula.setName("tfFormula"); // NOI18N
        panelFormula.add(tfFormula, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, 200, -1));

        jbUseFormula.setText(resourceMap.getString("jbUseFormula.text")); // NOI18N
        jbUseFormula.setName("jbUseFormula"); // NOI18N
        jbUseFormula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUseFormulaActionPerformed(evt);
            }
        });
        panelFormula.add(jbUseFormula, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 80, 30));

        checkUseFormula.setBackground(resourceMap.getColor("checkUseFormula.background")); // NOI18N
        checkUseFormula.setText(resourceMap.getString("checkUseFormula.text")); // NOI18N
        checkUseFormula.setName("checkUseFormula"); // NOI18N
        checkUseFormula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkUseFormulaActionPerformed(evt);
            }
        });
        panelFormula.add(checkUseFormula, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        panelFormula.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, 210, 30));

        jPanel1.add(panelFormula, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 570, 220));

        panelImportExistings.setBackground(resourceMap.getColor("panelImportExistings.background")); // NOI18N
        panelImportExistings.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("panelImportExistings.border.title"))); // NOI18N
        panelImportExistings.setName("panelImportExistings"); // NOI18N
        panelImportExistings.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        checkImportExistings.setBackground(resourceMap.getColor("checkImportExistings.background")); // NOI18N
        checkImportExistings.setText(resourceMap.getString("checkImportExistings.text")); // NOI18N
        checkImportExistings.setName("checkImportExistings"); // NOI18N
        checkImportExistings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkImportExistingsActionPerformed(evt);
            }
        });
        panelImportExistings.add(checkImportExistings, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jbImportExisting.setText(resourceMap.getString("jbImportExisting.text")); // NOI18N
        jbImportExisting.setName("jbImportExisting"); // NOI18N
        jbImportExisting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImportExistingActionPerformed(evt);
            }
        });
        panelImportExistings.add(jbImportExisting, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 35, 80, 30));

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        panelImportExistings.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, 20));

        tfIdCas.setText(resourceMap.getString("tfIdCas.text")); // NOI18N
        tfIdCas.setMinimumSize(new java.awt.Dimension(6, 22));
        tfIdCas.setName("tfIdCas"); // NOI18N
        tfIdCas.setPreferredSize(new java.awt.Dimension(59, 22));
        panelImportExistings.add(tfIdCas, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 40, 50, 22));

        jbGetIdCas.setText(resourceMap.getString("jbGetIdCas.text")); // NOI18N
        jbGetIdCas.setName("jbGetIdCas"); // NOI18N
        jbGetIdCas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGetIdCasActionPerformed(evt);
            }
        });
        panelImportExistings.add(jbGetIdCas, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 40, -1));

        checkForExistings.setBackground(resourceMap.getColor("checkForExistings.background")); // NOI18N
        checkForExistings.setText(resourceMap.getString("checkForExistings.text")); // NOI18N
        checkForExistings.setName("checkForExistings"); // NOI18N
        panelImportExistings.add(checkForExistings, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 210, -1));

        jPanel1.add(panelImportExistings, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 570, 80));

        panelImportStandard.setBackground(resourceMap.getColor("panelImportStandard.background")); // NOI18N
        panelImportStandard.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("panelImportStandard.border.title"))); // NOI18N
        panelImportStandard.setName("panelImportStandard"); // NOI18N
        panelImportStandard.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        checkImportStandard.setBackground(resourceMap.getColor("checkImportStandard.background")); // NOI18N
        checkImportStandard.setText(resourceMap.getString("checkImportStandard.text")); // NOI18N
        checkImportStandard.setName("checkImportStandard"); // NOI18N
        checkImportStandard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkImportStandardActionPerformed(evt);
            }
        });
        panelImportStandard.add(checkImportStandard, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jbImportStandard.setText(resourceMap.getString("jbImportStandard.text")); // NOI18N
        jbImportStandard.setName("jbImportStandard"); // NOI18N
        jbImportStandard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImportStandardActionPerformed(evt);
            }
        });
        panelImportStandard.add(jbImportStandard, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 33, 80, 30));

        checkForStandard.setBackground(resourceMap.getColor("checkForStandard.background")); // NOI18N
        checkForStandard.setText(resourceMap.getString("checkForStandard.text")); // NOI18N
        checkForStandard.setName("checkForStandard"); // NOI18N
        panelImportStandard.add(checkForStandard, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 210, -1));

        jPanel1.add(panelImportStandard, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 570, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // Dialog został zamknięty
        doClose(RET_CANCEL);
    }//GEN-LAST:event_formWindowClosing

    private void checkImportExistingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkImportExistingsActionPerformed
        bCheckExist = !bCheckExist;
        if (bCheckExist) {
           bCheckStand = false;
           bCheckFormula = false;
        }
        refreshData();
    }//GEN-LAST:event_checkImportExistingsActionPerformed

    private void checkImportStandardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkImportStandardActionPerformed
        bCheckStand = !bCheckStand;
        if (bCheckStand) {
           bCheckExist = false;
           bCheckFormula = false;
        }
        refreshData();
    }//GEN-LAST:event_checkImportStandardActionPerformed

    private void checkUseFormulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkUseFormulaActionPerformed
        bCheckFormula = !bCheckFormula;
        if (bCheckFormula) {
           bCheckExist = false;
           bCheckStand = false;
        }
        refreshData();
    }//GEN-LAST:event_checkUseFormulaActionPerformed

    private void jbGetIdCasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGetIdCasActionPerformed
            SelectCustomerDialog frame = new SelectCustomerDialog(null, true, true, "","");
            frame.setTitle("Zaznacz ID_CUST jednego klienta, definicję którego chcesz skopiować");
            frame.setVisible(true);
            if (tfIdCas.getText().equals(((SelectCustomerDialog)frame).selectedID_CUST)){
                YPFunctions.showBigErrorMessage("Nie można wybrać za źródło docelowy ID CAS, wybierz inny");
                return;
            }
            //Wyś›wietlamy wybrany ID CUST
            tfIdCas.setText(((SelectCustomerDialog)frame).selectedID_CUST);
            tfIdCas.repaint();

    }//GEN-LAST:event_jbGetIdCasActionPerformed

    private void jbImportExistingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImportExistingActionPerformed
        int ifromIdCas = YPFunctions.nvlParseInteger(tfIdCas.getText());
        if ((ifromIdCas < 1000) || (ifromIdCas > 20000)) {
                YPFunctions.showBigErrorMessage("Nie prawidłowy źródłowy ID CAS, wybierz inny");
                return;
        }

        String query = "Delete from dict_dr where id_cust=?";
        Vector queryParams = new Vector(Arrays.asList(idCas));

        if (!checkForExistings.isSelected()) {
               query += " and id_product=? and id_pay=?";
               queryParams.add(product);
               queryParams.add(platnik);
        }
        GlobalData.oraSession.executeQuery(query,queryParams);



        queryParams = new Vector(Arrays.asList(ifromIdCas));
        query = "insert into dict_dr(id_cust,id_product,weight,price,distance,id_pay) (select " +
                Integer.toString(idCas) + ",id_product,weight,price,distance,id_pay from dict_dr where id_cust=?";

        if (!checkForExistings.isSelected()) {
               query += " and id_product=? and id_pay=?";
               queryParams.add(product);
               queryParams.add(platnik);
        }
        query += ")";
        GlobalData.oraSession.executeQuery(query,queryParams);
        YPFunctions.showMessage("Import wykonano","");

        doClose(RET_OK);
    }//GEN-LAST:event_jbImportExistingActionPerformed

    private void jbImportStandardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImportStandardActionPerformed

        String query = "Delete from dict_dr where id_cust=?";
        Vector queryParams = new Vector(Arrays.asList(idCas));

        if (!checkForStandard.isSelected()) {
               query += " and id_product=? and id_pay=?";
               queryParams.add(product);
               queryParams.add(platnik);
        }
        GlobalData.oraSession.executeQuery(query,queryParams);
        query = "insert into dict_dr(id_cust,id_product,weight,price,distance,id_pay) (select " +
                Integer.toString(idCas) + ",id_product,weight,price,distance,id_pay from dict_dr_std ";

        queryParams = new Vector();

        if (!checkForStandard.isSelected()) {
             query += " where id_product=? and id_pay=?";
             queryParams.add(product);
             queryParams.add(platnik);
        }
        query += ")";
        GlobalData.oraSession.executeQuery(query,queryParams);
        YPFunctions.showMessage("Import wykonano","");
        doClose(RET_OK);

    }//GEN-LAST:event_jbImportStandardActionPerformed

    private void jbUseFormulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUseFormulaActionPerformed
            if ((YPFunctions.nvlParseInteger(tfWagaOd.getText())== 0) ||
                (YPFunctions.nvlParseInteger(tfWagaDo.getText())== 0) ||
                (YPFunctions.nvlParseInteger(tfOdlOd.getText())== 0) ||
                (YPFunctions.nvlParseInteger(tfOdlDo.getText()) == 0) ||
                tfFormula.getText().trim().equals(""))
            {
                YPFunctions.showErrorMessage("Nie prawidłowo wypełnione pola");
//                JOptionPane.showMessageDialog(null, "Nie prawidłowo wypełnione pola", "Błąd", JOptionPane.ERROR_MESSAGE);
                return;
            }

            GlobalData.oraSession.executeProcedure("MGR_DEFINE.CALC_DR(?,?,?,?,?,?,?,?)",
                        new Vector(Arrays.asList(
                        idCas,
                        platnik,
                        product,
                        YPFunctions.nvlParseInteger(tfWagaOd.getText()),
                        YPFunctions.nvlParseInteger(tfWagaDo.getText()),
                        YPFunctions.nvlParseInteger(tfOdlOd.getText()),
                        YPFunctions.nvlParseInteger(tfOdlDo.getText()),
                        tfFormula.getText())));
            YPFunctions.showMessage("Zastosowanie formuły zostało wykonane","");

    }//GEN-LAST:event_jbUseFormulaActionPerformed

    private void doClose(int retStatus) {
        // Zamykamy dialog
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**  zwraca informacje o przycisku OK czy Cofnij nacisnął użytkownik
    */
    public int getReturnStatus() {
        // zmienna returnStatus jest prywatna, robimy publiczną metodę,
        // żeby zwrócić informację który przycisk (Ok czy Cofnij) nacisnął
        // użytkownik
        return returnStatus;
    }



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OptionsDrDialog dialog = new OptionsDrDialog(new javax.swing.JFrame(), true,0,"","");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkForExistings;
    private javax.swing.JCheckBox checkForStandard;
    private javax.swing.JCheckBox checkImportExistings;
    private javax.swing.JCheckBox checkImportStandard;
    private javax.swing.JCheckBox checkUseFormula;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbGetIdCas;
    private javax.swing.JButton jbImportExisting;
    private javax.swing.JButton jbImportStandard;
    private javax.swing.JButton jbUseFormula;
    private javax.swing.JPanel panelFormula;
    private javax.swing.JPanel panelImportExistings;
    private javax.swing.JPanel panelImportStandard;
    private javax.swing.JTextField tfFormula;
    private javax.swing.JTextField tfIdCas;
    private javax.swing.JTextField tfOdlDo;
    private javax.swing.JTextField tfOdlOd;
    private javax.swing.JTextField tfWagaDo;
    private javax.swing.JTextField tfWagaOd;
    // End of variables declaration//GEN-END:variables
    public int RET_CANCEL = 0;
    public int RET_OK = 1;
    private int returnStatus = RET_CANCEL;
    public String product;
    public String platnik;
    public int idCas;
    private boolean bCheckExist, bCheckStand, bCheckFormula;
}
