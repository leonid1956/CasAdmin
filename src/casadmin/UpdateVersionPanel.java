package casadmin;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
//import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;


public class UpdateVersionPanel extends javax.swing.JPanel {

    public UpdateVersionPanel() {
        initComponents();
        version = org.jdesktop.application.Application.getInstance(casadmin.CasAdminApp.class).getContext().getResourceMap().getString(
                "Application.version");
        versionFileName = Constants.temporaryDir + "/Version.txt";
        appFileName = Constants.temporaryDir + "/CasAdmin.jar";
        labelVersion.setText(version);
        panelInfo.setVisible(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        upPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelVersion = new javax.swing.JLabel();
        butCheck = new javax.swing.JButton();
        downPanel = new javax.swing.JPanel();
        panelInfo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfInfo = new javax.swing.JTextArea();
        butUpdate = new javax.swing.JButton();
        labelInfo = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        setLayout(new java.awt.GridLayout(1, 0));

        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(casadmin.CasAdminApp.class).getContext().getResourceMap(UpdateVersionPanel.class);
        upPanel.setBackground(resourceMap.getColor("upPanel.background")); // NOI18N
        upPanel.setName("upPanel"); // NOI18N
        upPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        labelVersion.setFont(resourceMap.getFont("labelVersion.font")); // NOI18N
        labelVersion.setText(resourceMap.getString("labelVersion.text")); // NOI18N
        labelVersion.setName("labelVersion"); // NOI18N
        jPanel1.add(labelVersion, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 50, -1));

        butCheck.setText(resourceMap.getString("butCheck.text")); // NOI18N
        butCheck.setName("butCheck"); // NOI18N
        butCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCheckActionPerformed(evt);
            }
        });
        jPanel1.add(butCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, 190, -1));

        upPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 560, 80));

        jSplitPane1.setTopComponent(upPanel);

        downPanel.setBackground(resourceMap.getColor("downPanel.background")); // NOI18N
        downPanel.setName("downPanel"); // NOI18N
        downPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelInfo.setBackground(resourceMap.getColor("panelInfo.background")); // NOI18N
        panelInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("panelInfo.border.title"))); // NOI18N
        panelInfo.setName("panelInfo"); // NOI18N
        panelInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tfInfo.setColumns(20);
        tfInfo.setFont(resourceMap.getFont("tfInfo.font")); // NOI18N
        tfInfo.setRows(5);
        tfInfo.setName("tfInfo"); // NOI18N
        jScrollPane1.setViewportView(tfInfo);

        panelInfo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 520, 260));

        butUpdate.setText(resourceMap.getString("butUpdate.text")); // NOI18N
        butUpdate.setName("butUpdate"); // NOI18N
        butUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUpdateActionPerformed(evt);
            }
        });
        panelInfo.add(butUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 320, 120, 30));

        labelInfo.setText(resourceMap.getString("labelInfo.text")); // NOI18N
        labelInfo.setName("labelInfo"); // NOI18N
        panelInfo.add(labelInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 240, -1));

        downPanel.add(panelInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 560, 370));

        jSplitPane1.setRightComponent(downPanel);

        add(jSplitPane1);
    }// </editor-fold>//GEN-END:initComponents
     private boolean httpDownloadFile(String p_link, String p_fileName) {
        boolean result = false;
        DefaultHttpClient httpclient = new DefaultHttpClient();
        HttpGet httpget = new HttpGet(p_link);
        HttpResponse response = null;
        try {
            response = httpclient.execute(httpget);
            HttpEntity entity = response.getEntity();
            File f = new File(p_fileName);
            OutputStream out = new FileOutputStream(f);
            byte[] bytes = EntityUtils.toByteArray(entity);
            out.write(bytes, 0, (int)entity.getContentLength());
            out.close();




            result = true;
        } catch (Exception ex) {
        }
        httpclient.getConnectionManager().shutdown();
        return result;
     }



    private void butCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCheckActionPerformed
        new File(versionFileName).delete();
        boolean res = httpDownloadFile(
                Constants.linkWLink + "/?GetFile=eCas/CasAdmin/Version.txt",
                versionFileName);
        if (res)
        {
              String line = YPFunctions.getFirstLine(
                      new File(versionFileName));
              String newVersion = YPFunctions.getTokenAt(0, line, "\t", "");
              panelInfo.setVisible(true);
              labelInfo.setVisible(true);
              if (version.equals(newVersion))
              {
                  butUpdate.setVisible(false);
                  labelInfo.setText("<html><b>Brak</b> nowej wersji");
              }
              else
              {
                  labelInfo.setText("<html>Udostępniona nowa wersja <b>" + newVersion + "</b> aplikacji CasAdmin");
                  tfInfo.setVisible(true);
                  butUpdate.setVisible(true);
                  tfInfo.setText(YPFunctions.getContents(new File(Constants.temporaryDir + "/Version.txt")));
              }
        }
        else
        {
              YPFunctions.showErrorMessage("Nie udało się połączyć z serwerem");
//              JOptionPane.showMessageDialog(this, "Nie udało się połączyć z serwerem", "Błąd", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_butCheckActionPerformed

    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
        new File(appFileName).delete();
        boolean res = httpDownloadFile(
                Constants.linkWLink + "/?GetFile=eCas/CasAdmin/CasAdmin.jar",
                appFileName);
        if (res)
        {
            YPFunctions.copyFile(appFileName, "CasAdmin.jar", false);
            YPFunctions.copyFile(versionFileName, "Version.txt", false);
            new File(appFileName).delete();
            new File(versionFileName).delete();
            YPFunctions.showMessage("Aplikacja została ściągnięta. Proszę zrestartować aplikację","");
        }
        else
        {
            YPFunctions.showErrorMessage("Nie udało się sciągnąć nowej wersji aplikacji");
//            JOptionPane.showMessageDialog(this, "Nie udało się sciągnąć nowej wersji aplikacji", "Błąd", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_butUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butCheck;
    private javax.swing.JButton butUpdate;
    private javax.swing.JPanel downPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel labelInfo;
    private javax.swing.JLabel labelVersion;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JTextArea tfInfo;
    private javax.swing.JPanel upPanel;
    // End of variables declaration//GEN-END:variables
    private String version;
    private String versionFileName;
    private String appFileName;
}
