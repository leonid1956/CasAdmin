package casadmin;

import java.util.*;
import java.text.*;

public class ReAddressPanel extends javax.swing.JPanel {

    private boolean  depotDrExists;
    public ReAddressPanel() {
        initComponents();
        bAllow = false;

        Vector<String> vFieldNames = GlobalData.oraSession.selectFieldNames("CUSTOMERS_TERMINAL");
        depotDrExists = (vFieldNames.indexOf("DEPOT_DR") >= 0);

        fillTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        upPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cbAllow = new javax.swing.JCheckBox();
        downPanel = new javax.swing.JPanel();
        panelException = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        butAddRecord = new javax.swing.JButton();
        butDelRecord = new javax.swing.JButton();

        setName("Form"); // NOI18N
        setLayout(new java.awt.GridLayout(1, 0));

        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setName("jSplitPane1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(casadmin.CasAdminApp.class).getContext().getResourceMap(ReAddressPanel.class);
        upPanel.setBackground(resourceMap.getColor("upPanel.background")); // NOI18N
        upPanel.setName("upPanel"); // NOI18N
        upPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel2.border.title"))); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbAllow.setBackground(resourceMap.getColor("cbAllow.background")); // NOI18N
        cbAllow.setText(resourceMap.getString("cbAllow.text")); // NOI18N
        cbAllow.setName("cbAllow"); // NOI18N
        cbAllow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAllowActionPerformed(evt);
            }
        });
        jPanel2.add(cbAllow, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 23, -1, 20));

        upPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 490, 60));
        jPanel2.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanel2.AccessibleContext.accessibleName")); // NOI18N

        jSplitPane1.setTopComponent(upPanel);

        downPanel.setBackground(resourceMap.getColor("downPanel.background")); // NOI18N
        downPanel.setName("downPanel"); // NOI18N
        downPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelException.setBackground(resourceMap.getColor("panelException.background")); // NOI18N
        panelException.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("panelException.border.title"))); // NOI18N
        panelException.setName("panelException"); // NOI18N
        panelException.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.setName("table"); // NOI18N
        jScrollPane1.setViewportView(table);

        panelException.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 350, 490));

        butAddRecord.setText(resourceMap.getString("butAddRecord.text")); // NOI18N
        butAddRecord.setName("butAddRecord"); // NOI18N
        butAddRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAddRecordActionPerformed(evt);
            }
        });
        panelException.add(butAddRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 100, 30));

        butDelRecord.setText(resourceMap.getString("butDelRecord.text")); // NOI18N
        butDelRecord.setName("butDelRecord"); // NOI18N
        butDelRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDelRecordActionPerformed(evt);
            }
        });
        panelException.add(butDelRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 100, 30));

        downPanel.add(panelException, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 490, 540));
        panelException.getAccessibleContext().setAccessibleName(resourceMap.getString("panelException.AccessibleContext.accessibleName")); // NOI18N

        jSplitPane1.setRightComponent(downPanel);

        add(jSplitPane1);
    }// </editor-fold>//GEN-END:initComponents

    private void cbAllowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAllowActionPerformed
        bAllow = !bAllow;
        YPFunctions.enableContainer(panelException, bAllow);
}//GEN-LAST:event_cbAllowActionPerformed

    private void butDelRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDelRecordActionPerformed
        deleteRecord();
}//GEN-LAST:event_butDelRecordActionPerformed

    private void butAddRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddRecordActionPerformed
        addRecord();
}//GEN-LAST:event_butAddRecordActionPerformed
    private void deleteRecord() {
          int[] selRows = table.getSelectedRows();
          if (selRows.length == 0)
              YPFunctions.showErrorMessage("Nie wybrany rekord");
//              JOptionPane.showMessageDialog(null, "Nie wybrany rekord", "Błąd", JOptionPane.ERROR_MESSAGE);
          else if (selRows.length > 1)
              YPFunctions.showErrorMessage("Proszę usuwać po jednemu rekordu");
//              JOptionPane.showMessageDialog(null, "Proszę usuwać po jednemu rekordu", "Błąd", JOptionPane.ERROR_MESSAGE);
          else {
                  // Wymagamy potwierdzenia
                  if (javax.swing.JOptionPane.YES_OPTION == YPFunctions.showQuestionMessage(
                      "Czy naprawdę chcesz usunąć dane klienta \n" +
                      YPFunctions.strGet(table,selRows[0], 0) +
                      " z tablicy wyjątków?",
                      "Usuwanie klienta CAS z tablicy wyjątków")) {
                               GlobalData.oraSession.executeQuery(
                                       "Delete from customers_terminal where id_cust=?",
                                       new Vector(Arrays.asList(
                                                  YPFunctions.strGet(table,selRows[0], 0))));
                               fillTable();
                      }
          }

    }


    private void addRecord() {
        // Wywołujemy dialog dodania rekordu
        AddReAddressDialog frame = new AddReAddressDialog(CasAdminApp.getApplication().getMainFrame(),
                true);
        frame.setVisible(true);
        // Jeśli użytkownik wycofał sie z procedury edycji
        if (frame.getReturnStatus() == frame.RET_CANCEL) {
                // Wycofujemy sie z procedury
                return;
        }
        // Inaczej dodajemy rekord
        if (depotDrExists)
            GlobalData.oraSession.executeQuery(
                   "Insert into customers_terminal(ID_CUST, DEPOT, DEPOT_DR) values(?,?,?)",
                                       new Vector(Arrays.asList(frame.retIdCust,frame.retDepot,frame.retDepotDR)));
        else
            GlobalData.oraSession.executeQuery(
                   "Insert into customers_terminal(ID_CUST, DEPOT) values(?,?)",
                                       new Vector(Arrays.asList(frame.retIdCust,frame.retDepot)));
        GlobalData.oraSession.SaveLog("Dodanie do wyjątków " + frame.retIdCust, frame.retDepot);

        fillTable();
    }

    private void fillTable() {
        // Zapytanie SQL
        String  query = "select * from customers_terminal";
        // Pokazujemy tablicę
        YPFunctions.FillTableFromOra(query,  // zapytanie
                                     null,   // brak parametrów
                                     0,      // wszystkie od 0
                                     99999,  // do 99999
                                     table, // tablica
                                     new Vector(), // szerokości kolumn
                                     new Vector(),  // brak kolumn, interpretowanych jako Boolean
                                     false,   // Dodatkowa pierwsza kolumna z checkbox'ami
                                     true,   // sortowanie po kolumnach
                                     new Vector(), // nic nie można edytować
                                     null,    // bez nagłówków linijek
                                     true);
        table.repaint();
        YPFunctions.enableContainer(panelException, bAllow);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAddRecord;
    private javax.swing.JButton butDelRecord;
    private javax.swing.JCheckBox cbAllow;
    private javax.swing.JPanel downPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel panelException;
    private javax.swing.JTable table;
    private javax.swing.JPanel upPanel;
    // End of variables declaration//GEN-END:variables
    private boolean bAllow;
    
}
